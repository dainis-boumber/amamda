Abstract

An application of semi-supervised learning is
made to the problem of person identication in
low quality webcam images. Using a set of im-
ages of ten people collected over a period of four
months, the person identication task is posed
as a graph-based semi-supervised learning prob-
lem, where only a few training images are la-
beled. The importance of domain knowledge
in graph construction is discussed, and experi-
ments are presented that clearly show the advan-
tage of semi-supervised learning over standard
supervised learning. The data used in the study
is available to the research community to encour-
age further investigation of this problem.

1. Introduction

The School of Computer Science at Carnegie Mellon Uni-
versity has a public lounge, where leftover pizza and other
food items from various meetings converge, to the delight
of students, staff, and faculty. To help monitor the pres-
ence of food in the lounge, a webcam, sometimes called the
FreeFoodCam1, is mounted in a coke machine and trained
upon the table where food is placed. After being spotted
on the webcam, the arrival of (almost) fresh free food is
heralded with instant messages sent throughout the School.

The FreeFoodCam offers interesting opportunities for re-

1http://www.cs.cmu.edu/coke, Carnegie Mellon

University internal

Appearing in Proc. of the 22 st ICML Workshop on Learning with
Partially Classied Training Data, Bonn, Germany, 2005. Copy-
right 2005 by the author(s)/owner(s).

search in semi-supervised machine learning. This paper
presents an investigation of the problem of person identi-
cation in this low quality video data, using webcam im-
ages of ten people that were collected over a period of sev-
eral months. The results highlight the importance of do-
main knowledge in semi-supervised learning, and clearly
demonstrate the advantages of using both labeled and unla-
beled data over standard supervised learning.

In recent years, there has been a substantial amount of work
exploring how best to incorporate unlabeled data into su-
pervised learning (Zhu, 2005). Several semi-supervised
learning approaches have been proposed for practical ap-
plications in different areas, such as information retrieval,
text classication (Nigam et al., 1998), and bioinformat-
ics (Weston et al., 2004; Shin et al., 2004). In the context
of computer vision, several interesting results have been
obtained for object detection. Levin et al.
(2003) intro-
duced a technique based on co-training (Blum & Mitchell,
1998) for tting visual detectors in a way that requires only
a small quantity of labeled data, using unlabeled data to
improve performance over time. Rosenberg et al. (2005)
present a semi-supervised approach to training object de-
tection systems based on self-training, and perform exten-
sive experiments with a state-of-the-art detector (Schnei-
derman & Kanade, 2002; Schneiderman, 2004a; Schnei-
derman, 2004b) demonstrating that a model trained in this
manner can achieve results comparable to a model trained
in the traditional manner using a much larger set of fully
labeled data.

In this work, we describe a new application of semi-
supervised learning to the problem of person identication
in webcam images, where the video stream has a low frame
rate, and the images are of low quality. Signicantly, many
of the images may have no face, as the person could be fac-
ing away from the camera. We discuss the creation of the

Figure1. Four typical FreeFoodCam images.

dataset, and the formulation of the semi-supervised learn-
ing problem. The task of face recognition, of course, has
an extensive literature; see (Zhao et al., 2003) for a sur-
vey. However, to the best of our knowledge, person identi-
cation in video data has not been previously attacked us-
ing semi-supervised learning methods. Relatively primitive
image processing techniques are used in our work; we note
that more sophisticated computer vision techniques can be
easily incorporated into the framework, and should only
improve the performance. But the spirit of our contribution
is to argue that semi-supervised learning methods may be
attractive as a complementary tool to advanced image pro-
cessing. The data we have developed and that forms the
basis for the experiments reported here will be made avail-
able to the research community.2

2. The FreeFoodCam Dataset

The dataset consists of 5254 images with one and only one
person in it. Figure 1 shows four typical images from the
data. The task is not trivial:

 The images of each person were captured on multi-
ple days during a four month period. People changed

2Instructions for obtaining the dataset can be found at http:

//www.cs.cmu.edu/zhuxj/freefoodcam.

clothes, hair styles, and one person even grew a beard.
We simulate a video surveillance scenario where im-
ages for a group of people are manually labeled in a
few beginning frames, and the people must be recog-
nized on later days. Therefore we choose labeled data
within the rst day of a persons appearance, and test
on the remaining images of the day and all other days.
This is much more difcult than testing only on the
same day, or allowing labeled data to come from all
days.

 The FreeFoodCam is a low quality webcam. Each
frame has 640  480 resolution so faces of far away
people are small. The frame rate is a little over 0.5
frames per second, and lighting in the lounge is com-
plex and changing.

 A person could turn their face away from the camera,
and roughly one third of the images contain no face at
all.

Since only a few images are labeled, and all of the test im-
ages are available, the task is a natural candidate for the
application of semi-supervised learning techniques.

date

1
2
3
4
5
6
7
8
9
10
total

10/24
128
256
288
204
266
195
126
189
189

1841

11/13

1/6

41
34
163
66
94

398

179
200
172
215
65
831

1/14
193

305

189

180
117
69
143
1196

1/20

1/21

1/27
153

193

70

122
384

190
19

22
15
30

104
28

43

276

328

474
448
593
394
515
512
789
559
640
330
5254

Figure2. Left: mean background image used for background subtraction. Right: breakdown of the 10 subjects by date.

2.1. Data Collection

We asked ten volunteers to appear in seven FreeFoodCam
takes over four months. Not all participants could show up
for every take. The FreeFoodCam is located in the Com-
puter Science lounge, but we received a live camera feed
in our ofce, and took images from the camera whenever a
new frame was available.

In each take, the participants took turns entering the scene,
walking around, and acting naturally, for example by
reading the newspaper or chatting with off-camera col-
leagues, for ve to ten minutes per take. As a result, we
collected images where the individuals have varying poses
and are at a range of distances from the camera. We dis-
carded all frames that were corrupted by electronic noise in
the coke machine, or that contained more than one person
in the scene. This latter constraint imposed was to make
the task simple to specify as a rst step; there is no reason
that the methods we present below could not be extended
to work with scenes containing multiple people.

2.2. Foreground Color Extraction

To accurately capture the color information of an individual
in the image, based primarily on their clothing, we had to
separate him or her from the background. As computer
vision is not the focus of the work, we used only primitive
image processing methods.

A simple background subtraction algorithm was used to
nd the foreground. We computed the per-pixel means
and variances of red, green and blue channels from 294
background images. Figure 2 shows the mean background.
Using the means and variances of the background, we ob-
tained the foreground area in each image by thresholding.
Pixels deviating more than three standard derivations from
the mean were treated as foreground.

To improve the quality of the foreground color histogram,

we processed the foreground area using morphological
transforms (Jain, 1989). Further processing was required
because the foreground derived from background subtrac-
tion often captured only part of the body and contained
background areas. We rst removed small islands in the
foreground by applying the open operation with a 7 pixel-
wide square. We then connected vertically-separated pixel
blocks (such as head and lower torso) using the close opera-
tion with a 60-pixel-by-10-pixel rectangular block. Finally,
we made sure the foreground contains the entire person by
enlarging the foreground to include neighboring pixels by
further closing the foreground with a disk of 20 pixels in
radius. And because there is only one person in each im-
age, we discarded all but the largest contiguous block of
pixels in the processed foreground. Figure 3 shows some
processed foreground images.

After this processing the foreground area is represented
by a 100-dimensional vector, which consists of a 50-bin
hue histogram, a 30-bin saturation histogram, and a 20-bin
brightness histogram.

2.3. Face Image Extraction

The face of the person is stored as a small image, which
is derived from the outputs of a face detector (Schneider-
man 2004a; 2004b) . Note that this is not a face recognizer
(a face recognizer was not used for this task). It simply de-
tects the presence of frontal or prole faces, and outputs the
estimated center and radius of the detected face. We took a
square area around the center as the face image. If no face
was detected, the face image is empty. Figure 4 shows a
few face images as determined by the face detector.

2.4. Summary of the Dataset

In summary, the dataset is comprised of 5254 images for
ten individuals, collected during seven takes over four
months. There is a slight imbalance in the class distribu-

Figure3. Examples of foregrounds extracted by background subtraction and morphological transforms.

Figure4. Examples of face images detected by the face detector.

tion, and only a subset of individuals are present in each
day (refer to Table 2 for the breakdown). Overall 34% of
the images (1808 out of 5254) do not contain a face.

Each image in the dataset is represented by three features:

Time: The date and time the image was taken.

Color histogram of processed foreground: A 100 di-
mensional vector consisting of three histograms of
the foreground pixels, a 50-bin hue histogram, a 30-
bin saturation histogram, and a 20-bin brightness his-
togram.

Face image: A square color image of the face (if present).
As mentioned above, this feature is missing in about
34% of the images.

3. The Graphs

Graph-based semi-supervised learning depends critically
on the construction and quality of the graph. The graph
should reect domain knowledge through the similarity
function that is used to assign edges (and their weights).
For the FreeFoodCam data the nodes in the graph are the
images. An edge is formed between two images according
to the following criteria:

1. Time edges. People normally move around in the
lounge at moderate speed, thus adjacent frames are
likely to contain the same person. We represent this
knowledge in the graph by putting an edge between
two images if their time difference is less than a
threshold t1 (usually a few seconds).

image 2910

neighbor 1: time edge

neighbor 2: color edge

neighbor 3: color edge

neighbor 4: color edge

neighbor 5: face edge

Figure5. A random image and its neighbors in the graph.

2. Color edges. The color histogram is largely deter-
mined by a persons apparel. We assume people
change clothes on different days, so that the color
histogram tends to be unusable across multiple days.
However, it is an informative feature during a shorter
time period (t2), such as half a day. In the graph for
every image i, we nd the set of images having a time
difference between (t1, t2) to i, and connect i with its
kc-nearest neighbors (in terms of cosine similarity on
histograms) in the set. The parameter kc is a small
integer, such as three.

3. Face edges. We use face similarity over longer time
spans. For every image i with a face, we nd the set
of images more than t2 apart from i, and connect i
with its kf -nearest neighbor in the set. We use pixel-
wise Euclidean distance between face images, where
the pair of face images is scaled to the same size.

The nal graph is the union of the three kinds of edges. The
edges are unweighted. We used t1 = 2 seconds, t2 = 12
hours, kc = 3 and kf = 1 below. Conveniently, these
parameters result in a connected graph.

It is impossible to visualize the whole graph. Instead, we
show the neighbors of a random node in Figure 5.

4. Algorithms

We use the simple Gaussian eld and harmonic function
algorithm (Zhu et al., 2003) on the FreeFoodCam dataset.

Let l be the number of labeled images, u the number of
unlabeled images, and n = l + u. The graph is represented
the n  n weight matrix W . Let D be the diagonal degree
matrix with Dii = Pj Wij, and dene the combinatorial
Laplacian

L = D  W

(1)

Let Yl be an lC label matrix, where C = 10 is the number
of classes. For i = 1 . . . l, Yl(i, c) = 1 if labeled image i
is in class c, Yl(i, c) = 0 otherwise. Then the harmonic
function solution for the unlabeled data is

Yu = L1

uu LulYl

(2)

where Luu is the submatrix of L on unlabeled nodes and
so on. Each row of Yu can be interpreted as the collection
of posterior probabilities p(yi = c|Yl) for c = 1 . . . C and
i  U. Classication is carried out by nding the class with
the maximal posterior in each row.

In (Zhu et al., 2003) it has also been shown that incor-
porating class proportion knowledge can be helpful. The
proportion qc of data with label c can be estimated from
the labeled set. In particular, the class mass normalization
(CMN) heuristic scales the posteriors to meet the propor-
tions. That is, one nds a set of coefcients a1, . . . , aC
such that

a1 X

iU

Yu(i, 1) :   

: aC X

iU

Yu(i, C) = q1 :   

: qC

(3)

time



face



color



Figure6.An example gradient walk on the graph. The walk starts from an unlabeled image, through assorted edges, and ends at a
labeled image.

Classication of an unlabeled point i is achieved by nding
argmaxcacYu(i, c). In the experiments below we report the
accuracy of both the harmonic function and CMN.

4.1. Gradient Walks on the Graph

The harmonic algorithm described above solves a set of lin-
ear equations so that the predicted label of each example is
the average of the predicted labels of its unlabeled neigh-
bors and the actual labels of its labeled neighbors. The
reasons for the algorithms predictions can (roughly) be
visualized by performing a gradient walk starting from
an unlabeled example i, always moving to the neighbor
with the highest score given to the predicted label. That
is, let y be the predicted label for i. If we are at node j, we
will walk to js neighbor node k if

k = argmaxk0jYu(k0, y)

(4)

The gradient walk continues until we reach a labeled ex-
ample. Two gradient walk paths are shown in Figure 6
and Figure 7.

5. Experimental Results

We evaluated harmonic functions on the FreeFoodCam
tasks. For each task we gradually increased the labeled set
size systematically, performed 30 random trials for each la-
beled set size. In each trial we randomly sampled a labeled
set with the specied size from the rst day of a persons
appearance only. This is because we wanted to simulate

a video surveillance scenario, where people are tagged and
identied on later days. It is more difcult and more real-
istic than sampling labeled data from the entire dataset. If
a class was missing from the sampled labeled set, we redid
the random sampling. The remaining images are used as
the unlabeled set.

We report the classication accuracies with harmonic func-
tions and CMN, on two different graphs. The rst graph
is constructed with parameters t1 = 2 seconds, t2 = 12
hours, kc = 3, kf = 1, the second with kc = 1. The results
are presented in Figure 8.

To compare the graph-base semi-supervised learning meth-
ods against a standard supervised learning method, we
used a Matlab implementation of support vector ma-
chines (Gunn, 1997) as the baseline. For C-class multi-
class problems, we used a one-against-all scheme which
creates C binary subproblems, one for each class against
all the other classes, and select the class with the largest
margin. Because we have missing features on face sub-
images, the kernel for the SVM baseline requires special
care. We used an interpolated linear kernel K(i, j) =
wtKt(i, j) + wcKc(i, j) + wf Kf (i, j), where Kt, Kc, Kf
are linear kernels (inner products) on time stamp, color his-
togram, and face sub-image (normalized to 50  50 pix-
els) respectively.
If image i contains no face, we dene
Kf (i, ) = 0. The interpolation weights wt, wc, wf were
optimized with cross validation. Notice the SVMs with
such kernel are not semi-supervised:
the unlabeled data
are merely used as test data. We found that the harmonic

time



face



color



color



Figure7.An example gradient walk on the graph. The walk starts from an unlabeled image, through assorted edges, and ends at a
labeled image.

function outperforms the linear kernel SVM baseline (Fig-
ure 8). The accuracy can be improved if we incorporate
class proportion knowledge with the simple CMN heuris-
tic. The class proportion is estimated from labeled data
with Laplace (add one) smoothing.

To demonstrate the importance of using unlabeled data for
semi-supervised learning, we compare the harmonic func-
tion with a minimal unlabeled set of size one. That is,
for each unlabeled point xi, we remove all other unlabeled
points and compute the harmonic function on the labeled
data plus xi. This becomes a supervised learning prob-
lem. The harmonic solution with only one unlabeled point
is equivalent to the standard weighted nearest neighbor al-
gorithm. Since the original graphs are sparse, most unla-
beled points may not have any labeled neighbors. To deal
with this we instead connect xi to its kc nearest labeled
neighbors in the color feature, and kf nearest neighbors in
the face feature, where edges are all unweighted. We tried
various combinations of kc and kf , including those used
in previous experiments. Notice we didnt use time edge at
all, because it does not make sense with only one unlabeled
point. The results are shown in Figure 9(a) with several dif-
ferent setting of kc and kf . The accuracies are all very low.
Basically this shows that no combination of color and face
works if one only use the labeled data. Therefore we see
that using all the unlabeled data is quite important for our
semi-supervised learning approach.

edges. In this case, rather than predicting each example to
be the unweighted average of its neighbors, the prediction
becomes a weighted average. Figure 9(b) shows that by
setting weights judiciously (in particular, giving more em-
phasis to time-edges) one can substantially improve perfor-
mance, especially on smaller samples. A related problem
is to learn the parameters for K-nearest neighbor, i.e. kc
for color edges and kf for face edges. We are currently ex-
ploring methods for learning good graph parameter settings
from a small set of labeled samples.

6. Summary

In this paper we formulated a person identication task in
low quality web cam images as a semi-supervised learning
problem, and presented experimental results. The experi-
mental setup resembles a video surveillance scenario: low
image quality and frame rate; labeled data is scarce and is
only available on the rst day of a persons appearance; fa-
cial information is not always available in the image. Our
experiments demonstrate that the semi-supervised learning
algorithms based on harmonic functions are capable of uti-
lizing the unlabeled data to identify ten individuals with
greater than 80% accuracy. The dataset is now available to
the research community.

Acknowledgements

We assigned all the edges equal weights. A natural exten-
sion is to give certain types of edges more weight than oth-
ers: e.g., perhaps give time-edges more weight than color-

We thank Henry Schneiderman for his help with the face
detector, and Ralph Gross for helpful discussions on im-
age processing. We also thank the volunteers for partici-

freefoodcam, harmonic function

freefoodcam, harmonic function + CMN

t1=2sec,t2=12hr,kc=3,kf=1
t1=2sec,t2=12hr,kc=1,kf=1
SVM linear

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

t1=2sec,t2=12hr,kc=3,kf=1
t1=2sec,t2=12hr,kc=1,kf=1
SVM linear

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

y
c
a
r
u
c
c
a


t

e
s


l

d
e
e
b
a
n
u

l

y
c
a
r
u
c
c
a


t

e
s


l

d
e
e
b
a
n
u

l

0
20

40

60

80

100
120
labeled set size

140

160

180

200

0
20

40

60

80

100
120
labeled set size

140

160

180

200

(a) harmonic function accuracy

(b) harmonic function + CMN accuracy

Figure8.Harmonic function and CMN accuracy on two graphs. Also shown is the SVM linear kernel baseline. (a) The harmonic func-
tion algorithm signicantly outperforms the linear kernel SVM, demonstrating that the semi-supervised learning algorithm successfully
utilizes the unlabeled data to associate people in images with their identities. (b) The semi-supervised learning algorithm classies even
more accurately by incorporating class proportion knowledge through the CMN heuristic.

pating in the FreeFoodCam dataset collection. This work
was supported in part by the National Science Foundation
under grants CCR-0122581 and IIS-0312814.

Schneiderman, H. (2004a). Feature-centric evaluation for
efcient cascaded object detection. IEEE Conference on
Computer Vision and Pattern Recognition (CVPR).

