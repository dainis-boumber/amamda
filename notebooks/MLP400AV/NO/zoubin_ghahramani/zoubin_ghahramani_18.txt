Abstract

We dene a probability distribution over equivalence classes of binary
matrices with a nite number of rows and an unbounded number of
columns. This distribution is suitable for use as a prior in probabilistic
models that represent objects using a potentially innite array of features.
We identify a simple generative process that results in the same distribu-
tion over equivalence classes, which we call the Indian buffet process.
We illustrate the use of this distribution as a prior in an innite latent fea-
ture model, deriving a Markov chain Monte Carlo algorithm for inference
in this model and applying the algorithm to an image dataset.

1

Introduction

The statistical models typically used in unsupervised learning draw upon a relatively small
repertoire of representations. The simplest representation, used in mixture models, asso-
ciates each object with a single latent class. This approach is appropriate when objects
can be partitioned into relatively homogeneous subsets. However, the properties of many
objects are better captured by representing each object using multiple latent features. For
instance, we could choose to represent each object as a binary vector, with entries indicat-
ing the presence or absence of each feature [1], allow each feature to take on a continuous
value, representing objects with points in a latent space [2], or dene a factorial model, in
which each feature takes on one of a discrete set of values [3, 4].
A critical question in all of these approaches is the dimensionality of the representation:
how many classes or features are needed to express the latent structure expressed by a
set of objects. Often, determining the dimensionality of the representation is treated as a
model selection problem, with a particular dimensionality being chosen based upon some
measure of simplicity or generalization performance. This assumes that there is a single,
nite-dimensional representation that correctly characterizes the properties of the observed
objects. An alternative is to assume that the true dimensionality is unbounded, and that the
observed objects manifest only a nite subset of classes or features [5]. This alternative
is pursued in nonparametric Bayesian models, such as Dirichlet process mixture models
[6, 7, 8, 9]. In a Dirichlet process mixture model, each object is assigned to a latent class,
and each class is associated with a distribution over observable properties. The prior dis-
tribution over assignments of objects to classes is dened in such a way that the number
of classes used by the model is bounded only by the number of objects, making Dirichlet
process mixture models innite mixture models [10].
The prior distribution assumed in a Dirichlet process mixture model can be specied in



terms of a sequential process called the Chinese restaurant process (CRP) [11, 12]. In the
CRP, N customers enter a restaurant with innitely many tables, each with innite seating
capacity. The ith customer chooses an already-occupied table k with probability mk
i1+ ,
where mk is the number of current occupants, and chooses a new table with probability
i1+ . Customers are exchangeable under this process: the probability of a particular
seating arrangement depends only on the number of people at each table, and not the order
in which they enter the restaurant.
If we replace customers with objects and tables with classes, the CRP species a distribu-
tion over partitions of objects into classes. A partition is a division of the set of N objects
into subsets, where each object belongs to a single subset and the ordering of the subsets
does not matter. Two assignments of objects to classes that result in the same division of
objects correspond to the same partition. For example, if we had three objects, the class
assignments {c1, c2, c3} = {1, 1, 2} would correspond to the same partition as {2, 2, 1},
since all that differs between these two cases is the labels of the classes. A partition thus
denes an equivalence class of assignment vectors.
The distribution over partitions implied by the CRP can be derived by taking the limit of
the probability of the corresponding equivalence class of assignment vectors in a model
where class assignments are generated from a multinomial distribution with a Dirichlet
prior [9, 10]. In this paper, we derive an innitely exchangeable distribution over innite
binary matrices by pursuing this strategy of taking the limit of a nite model. We also de-
scribe a stochastic process (the Indian buffet process, akin to the CRP) which generates this
distribution. Finally, we demonstrate how this distribution can be used as a prior in statisti-
cal models in which each object is represented by a sparse subset of an unbounded number
of features. Further discussion of the properties of this distribution, some generalizations,
and additional experiments, are available in the longer version of this paper [13].

2 A distribution on innite binary matrices

In a latent feature model, each object is represented by a vector of latent feature values f i,
and the observable properties of that object xi are generated from a distribution determined
by its latent features. Latent feature values can be continuous, as in principal component
analysis (PCA) [2], or discrete, as in cooperative vector quantization (CVQ) [3, 4]. In the
remainder of this section, we will assume that feature values are continuous. Using the ma-

trix F =(cid:2)f T

1

2    f T
f T

N(cid:3)T to indicate the latent feature values for all N objects, the model

is specied by a prior over features, p(F), and a distribution over observed property ma-
trices conditioned on those features, p(X|F), where p() is a probability density function.
These distributions can be dealt with separately: p(F) species the number of features and
the distribution over values associated with each feature, while p(X|F) determines how
these features relate to the properties of objects. Our focus will be on p(F), showing how
such a prior can be dened without limiting the number of features.
We can break F into two components: a binary matrix Z indicating which features are pos-
sessed by each object, with zik = 1 if object i has feature k and 0 otherwise, and a matrix
V indicating the value of each feature for each object. F is the elementwise product of Z
and V, F = Z  V, as illustrated in Figure 1. In many latent feature models (e.g., PCA)
objects have non-zero values on every feature, and every entry of Z is 1. In sparse latent
feature models (e.g., sparse PCA [14, 15]) only a subset of features take on non-zero values
for each object, and Z picks out these subsets. A prior on F can be dened by specifying
priors for Z and V, with p(F) = P (Z)p(V), where P () is a probability mass function.
We will focus on dening a prior on Z, since the effective dimensionality of a latent feature
model is determined by Z. Assuming that Z is sparse, we can dene a prior for innite la-
tent feature models by dening a distribution over innite binary matrices. Our discussion
of the Chinese restaurant process provides two desiderata for such a distribution: objects

(a)

K features

(b)

K features

(c)

K features

s
t
c
e
j
b
o

N

s
t
c
e
j
b
o

N

0.9

1.4

0

3.2

0

0.9

0.3

0

0

0

0.2 2.8

1.8

0

0.1

4

0

0

0

3

4

3

0

1

0

s
t
c
e
j
b
o

N

1

5

0

2

5

Figure 1: A binary matrix Z, as shown in (a), indicates which features take non-zero values.
Elementwise multiplication of Z by a matrix V of continuous values produces a represen-
tation like (b). If V contains discrete values, we obtain a representation like (c).

should be exchangeable, and posterior inference should be tractable.
It also suggests a
method by which these desiderata can be satised: start with a model that assumes a nite
number of features, and consider the limit as the number of features approaches innity.

2.1 A nite feature model

We have N objects and K features, and the possession of feature k by object i is indicated
by a binary variable zik. The zik form a binary N  K feature matrix, Z. Assume that
each object possesses feature k with probability k, and that the features are generated
independently. Under this model, the probability of Z given  = {1, 2, . . . , K }, is

K

N

K

P (Z|) =

P (zik|k) =

mk
k (1  k)N mk ,

(1)

Yk=1

Yi=1

Yk=1

on  by assuming that each k follows a beta distribution, to give

i=1 zik is the number of objects possessing feature k. We can dene a prior

where mk =PN

k |   Beta( 
zik | k  Bernoulli(k)

K , 1)

Each zik is independent of all other assignments, conditioned on k, and the k are gener-
ated independently. We can integrate out  to obtain the probability of Z, which is

P (Z) =

K

Yk=1



K (mk + 

K )(N  mk + 1)

(N + 1 + 
K )

.

(2)

This distribution is exchangeable, since mk is not affected by the ordering of the objects.

2.2 Equivalence classes

In order to nd the limit of the distribution specied by Equation 2 as K  , we need to
dene equivalence classes of binary matrices  the analogue of partitions for class assign-
ments. Our equivalence classes will be dened with respect to a function on binary matri-
ces, lof (). This function maps binary matrices to left-ordered binary matrices. lof (Z) is
obtained by ordering the columns of the binary matrix Z from left to right by the magnitude
of the binary number expressed by that column, taking the rst row as the most signicant
bit. The left-ordering of a binary matrix is shown in Figure 2. In the rst row of the left-
ordered matrix, the columns for which z1k = 1 are grouped at the left. In the second row,
the columns for which z2k = 1 are grouped at the left of the sets for which z1k = 1. This
grouping structure persists throughout the matrix.
The history of feature k at object i is dened to be (z1k, . . . , z(i1)k). Where no object is
specied, we will use history to refer to the full history of feature k, (z1k, . . . , zN k). We

lof

Figure 2: Left-ordered form. A binary matrix is transformed into a left-ordered binary
matrix by the function lof (). The entries in the left-ordered matrix were generated from
the Indian buffet process with  = 10. Empty columns are omitted from both matrices.

1

and K+ =P2N

will individuate the histories of features using the decimal equivalent of the binary numbers
corresponding to the column entries. For example, at object 3, features can have one of four
histories: 0, corresponding to a feature with no previous assignments, 1, being a feature for
which z2k = 1 but z1k = 0, 2, being a feature for which z1k = 1 but z2k = 0, and 3, being
a feature possessed by both previous objects were assigned. Kh will denote the number of
features possessing the history h, with K0 being the number of features for which mk = 0
h=1 Kh being the number of features for which mk > 0, so K = K0 + K+.
Two binary matrices Y and Z are lof-equivalent if lof (Y) = lof (Z). The lof-
equivalence class of a binary matrix Z, denoted [Z], is the set of binary matrices that are
lof-equivalent to Z. lof-equivalence classes play the role for binary matrices that parti-
tions play for assignment vectors: they collapse together all binary matrices (assignment
vectors) that differ only in column ordering (class labels). lof-equivalence classes are pre-
served through permutation of the rows or the columns of a matrix, provided the same
permutations are applied to the other members of the equivalence class. Performing infer-
ence at the level of lof-equivalence classes is appropriate in models where feature order
is not identiable, with p(X|F) being unaffected by the order of the columns of F. Any
model in which the probability of X is specied in terms of a linear function of F, such
as PCA or CVQ, has this property. The cardinality of the lof-equivalence class [Z] is

K

K0...K2N

(cid:16)

1(cid:17) =

K!
1

Q2N

h=0 Kh!

, where Kh is the number of columns with full history h.

2.3 Taking the innite limit

Under the distribution dened by Equation 2, the probability of a particular lof-equivalence
class of binary matrices, [Z], is

P ([Z]) = XZ[Z]

P (Z) =

K!

h=0 Kh!

Q2N 1

K

Yk=1



K (mk + 

K )(N  mk + 1)

(N + 1 + 
K )

.

(3)

Rearranging terms, and using the fact that (x) = (x  1)(x  1) for x > 1, we can
compute the limit of P ([Z]) as K approaches innity

lim
K

=

h=1 Kh!

K+

K+

Q2N 1
Q2N 1

h=1 Kh!

N !

j=1(j + 

K )!K

K!

K0! K K+



1







QN

exp{HN }

(N  mk)!Qmk1

N !

j=1

(j + 
K )

(N  mk)!(mk  1)!

N !

,

(4)





K+

K+

Yk=1
Yk=1

where HN is the Nth harmonic number, HN = PN

j . This distribution is innitely
exchangeable, since neither Kh nor mk are affected by the ordering on objects. Technical
details of this limit are provided in [13].

j=1

1

2.4 The Indian buffet process

The probability distribution dened in Equation 4 can be derived from a simple stochastic
process. Due to the similarity to the Chinese restaurant process, we will also use a culinary
metaphor, appropriately adjusted for geography. Indian restaurants in London offer buffets
with an apparently innite number of dishes. We will dene a distribution over innite
binary matrices by specifying how customers (objects) choose dishes (features).
In our Indian buffet process (IBP), N customers enter a restaurant one after another. Each
customer encounters a buffet consisting of innitely many dishes arranged in a line. The
rst customer starts at the left of the buffet and takes a serving from each dish, stopping
after a Poisson() number of dishes. The ith customer moves along the buffet, sampling
dishes in proportion to their popularity, taking dish k with probability mk
i , where mk is the
number of previous customers who have sampled that dish. Having reached the end of all
previous sampled dishes, the ith customer then tries a Poisson( 
i ) number of new dishes.
We can indicate which customers chose which dishes using a binary matrix Z with N rows
and innitely many columns, where zik = 1 if the ith customer sampled the kth dish.
Using K (i)
1
bility of any particular matrix being produced by the IBP is

to indicate the number of new dishes sampled by the ith customer, the proba-

P (Z) =

exp{HN }

K+
i=1 K (i)
1 !

QN

(N  mk)!(mk  1)!

N !

.

(5)

K+

Yk=1

The matrices produced by this process are generally not in left-ordered form. These ma-
trices are also not ordered arbitrarily, because the Poisson draws always result in choices
of new dishes that are to the right of the previously sampled dishes. Customers are not
exchangeable under this distribution, as the number of dishes counted as K (i)
depends
1
upon the order in which the customers make their choices. However, if we only pay at-
tention to the lof-equivalence classes of the matrices generated by this process, we obtain
the innitely exchangeable distribution P ([Z]) given by Equation 4: QN
matrices
Q2N
generated via this process map to the same left-ordered form, and P ([Z]) is obtained by
multiplying P (Z) from Equation 5 by this quantity. A similar but slightly more compli-
cated process can be dened to produce left-ordered matrices directly [13].

i=1 K(i)
1 !
h=1 Kh!

1

2.5 Conditional distributions

To dene a Gibbs sampler for models using the IBP, we need to know the conditional
distribution on feature assignments, P (zik = 1|Z(ik)). In the nite model, where P (Z)
is given by Equation 2, it is straightforward to compute this conditional distribution for any
zik. Integrating over k gives

P (zik = 1|zi,k) =

mi,k + 
K

N + 
K

,

(6)

where zi,k is the set of assignments of other objects, not including i, for feature k, and
mi,k is the number of objects possessing feature k, not including i. We need only condi-
tion on zi,k rather than Z(ik) because the columns of the matrix are independent.
In the innite case, we can derive the conditional distribution from the (exchangeable) IBP.
Choosing an ordering on objects such that the ith object corresponds to the last customer
to visit the buffet, we obtain

P (zik = 1|zi,k) =

mi,k

N

,

(7)

for any k such that mi,k > 0. The same result can be obtained by taking the limit of
Equation 6 as K  . The number of new features associated with object i should be

drawn from a Poisson( 
same kind of limiting argument as that presented above.

N ) distribution. This can also be derived from Equation 6, using the

3 A linear-Gaussian binary latent feature model

To illustrate how the IBP can be used as a prior in models for unsupervised learning, we
derived and tested a linear-Gaussian latent feature model in which the features are binary.
In this case the feature matrix F reduces to the binary matrix Z. As above, we will start
with a nite model and then consider the innite limit.
In our nite model, the D-dimensional vector of properties of an object i, xi is generated
from a Gaussian distribution with mean ziA and covariance matrix X = 2
I, where
X
zi is a K-dimensional binary vector, and A is a K  D matrix of weights.
In matrix
notation, E [X] = ZA. If Z is a feature matrix, this is a form of binary factor analysis. The
distribution of X given Z, A, and X is matrix Gaussian with mean ZA and covariance
X I, where I is the identity matrix. The prior on A is also matrix Gaussian, with
matrix 2
mean 0 and covariance matrix 2

AI. Integrating out A, we have

p(X|Z, X , A) =

(2)N D/2(N K)D

X

1
A |ZT Z + 2
KD

2

X

A

I|D/2

exp{

1
22
X

tr(XT (I  Z(ZT Z +

2
X
2
A

I)1ZT )X)}. (8)

This result is intuitive: the exponentiated term is the difference between the inner product
of X and its projection onto the space spanned by Z, regularized to an extent determined
by the ratio of the variance of the noise in X to the variance of the prior on A. It follows
that p(X|Z, X , A) depends only on the non-zero columns of Z, and thus remains well-
dened when we take the limit as K   (for more details see [13]).
We can dene a Gibbs sampler for this model by computing the full conditional distribution

P (zik|X, Z(i,k), X , A)  p(X|Z, X , A)P (zik|zi,k).

(9)

The two terms on the right hand side can be evaluated using Equations 8 and 7 respectively.
The Gibbs sampler is then straightforward. Assignments for features for which mi,k > 0
are drawn from the distribution specied by Equation 9. The distribution over the number
of new features for each object can be approximated by truncation, computing probabilities
for a range of values of K (i)
1 up to an upper bound. For each value, p(X|Z, X , A) can
be computed from Equation 8, and the prior on the number of new features is Poisson( 
N ).
We will demonstrate this Gibbs sampler for the innite binary linear-Gaussian model on a
dataset consisting of 100 240  320 pixel images. We represented each image, xi, using
a 100-dimensional vector corresponding to the weights of the mean image and the rst 99
principal components. Each image contained up to four everyday objects  a $20 bill, a
Klein bottle, a prehistoric handaxe, and a cellular phone. Each object constituted a single
latent feature responsible for the observed pixel values. The images were generated by
sampling a feature vector, zi, from a distribution under which each feature was present
with probability 0.5, and then taking a photograph containing the appropriate objects using
a LogiTech digital webcam. Sample images are shown in Figure 3 (a).
The Gibbs sampler was initialized with K+ = 1, choosing the feature assignments for
the rst column by setting zi1 = 1 with probability 0.5. A, X, and  were initially
set to 0.5, 1.7, and 1 respectively, and then sampled by adding Metropolis steps to the
MCMC algorithm. Figure 3 shows trace plots for the rst 1000 iterations of MCMC for the
number of features used by at least one object, K+, and the model parameters A, X, and
. All of these quantities stabilized after approximately 100 iterations, with the algorithm

(a)

(b)

(c)

10

+

K





X



A



5

0

4

2

0

2

1

0

2

1

0

0

0

0

0

(Positive)

(Negative)

(Negative)

(Negative)

0  0  0  0

0  1  0  0

1  1  1  0

1  0  1  1

100

200

300

400

500

600

700

800

900

1000

100

200

300

400

500

600

700

800

900

1000

100

200

300

400

500

600

700

800

900

1000

100

200

300

400

500

Iteration

600

700

800

900

1000

Figure 3: Data and results for the demonstration of the innite linear-Gaussian binary
latent feature model. (a) Four sample images from the 100 in the dataset. Each image
had 320  240 pixels, and contained from zero to four everyday objects. (b) The posterior
mean of the weights (A) for the four most frequent binary features from the 1000th sample.
Each image corresponds to a single feature. These features perfectly indicate the presence
or absence of the four objects. The rst feature indicates the presence of the $20 bill,
the other three indicate the absence of the Klein bottle, the handaxe, and the cellphone.
(c) Reconstructions of the images in (a) using the binary codes inferred for those images.
These reconstructions are based upon the posterior mean of A for the 1000th sample. For
example, the code for the rst image indicates that the $20 bill is absent, while the other
three objects are not. The lower panels show trace plots for the dimensionality of the
representation (K+) and the parameters , X, and A over 1000 iterations of sampling.
The values of all parameters stabilize after approximately 100 iterations.

nding solutions with approximately seven latent features. The four most common features
perfectly indicated the presence and absence of the four objects (shown in Figure 3 (b)), and
three less common features coded for slight differences in the locations of those objects.

4 Conclusion

We have shown that the methods that have been used to dene innite latent class models
[6, 7, 8, 9, 10, 11, 12] can be extended to models in which objects are represented in
terms of a set of latent features, deriving a distribution on innite binary matrices that can
be used as a prior for such models. While we derived this prior as the innite limit of
a simple distribution on nite binary matrices, we have shown that the same distribution
can be specied in terms of a simple stochastic process  the Indian buffet process. This
distribution satises our two desiderata for a prior for innite latent feature models: objects
are exchangeable, and inference remains tractable. Our success in transferring the strategy
of taking the limit of a nite model from latent classes to latent features suggests that a
similar approach could be applied with other representations, expanding the forms of latent
structure that can be recovered through unsupervised learning.

