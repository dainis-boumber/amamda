ABSTRACT
In this paper, we describe an approach for understanding
transcriptional regulation from both gene expression and
promoter sequence data. We aim to identify transcriptional
modulessets of genes that are co-regulated in a set
of experiments, through a common motif prole. Using
the EM algorithm, our approach renes both the module
assignment and the motif prole so as to best explain
the expression data as a function of transcriptional motifs.
It also dynamically adds and deletes motifs, as required
to provide a genome-wide explanation of the expression
data. We evaluate the method on two Saccharomyces
cerevisiae gene expression data sets, showing that our
approach is better than a standard one at recovering
known motifs and at generating biologically coherent
modules. We also combine our
results with binding
localization data to obtain regulatory relationships with
known transcription factors, and show that many of the
inferred relationships have support in the literature.
Contact: eran@cs.stanford.edu
Keywords: probabilistic models, gene expression, tran-
scriptional regulation.

INTRODUCTION
Many cellular processes are regulated at the transcriptional
level, by one or more transcription factors that bind to
short DNA sequence motifs in the upstream regions of the
process genes. These co-regulated genes then exhibit sim-
ilar patterns of expression. Given the upstream regions of
all genes, and measurements of their expression under var-
ious conditions, we could hope to reverse engineer the
underlying regulatory mechanisms and identify transcrip-
tional modulessets of genes that are co-regulated under
these conditions through a common motif or combination
of motifs.

In this paper, we take a genome-wide approach for dis-
covering this modular organization, based on the premise


To whom correspondence should be addressed.

that transcriptional elements should explain the observed
expression patterns as much as possible. We dene a prob-
abilistic graphical model (Pearl, 1988) that integrates both
the gene expression measurements and the DNA sequence
data into a unied model. The model assumes that genes
are partitioned into modules, which determine the genes
expression prole. Each module is characterized by a mo-
tif prole, which species the relevance of different se-
quence motifs to the module. A genes module assignment
is a function of the sequence motifs in its promoter re-
gion. However, our model does not assume that all motifs
are necessarily active. In fact, as motifs are usually short,
there are many genes where a motif is randomly present
but does not play a role. Furthermore, our goal is to dis-
cover motifs that play a regulatory role in some particular
set of experiments; a motif that is active in some settings
may be completely irrelevant in others. Our model identi-
es motif targetsgenes where the motif plays an active
role in affecting regulation in a particular expression data
set. These motif targets are genes that have the motif and
that are assigned to modules containing the motif in their
prole.

Our algorithm is outlined in Figure 1. It begins by
clustering the expression data, creating one module from
each of the resulting clusters. As the rst attempt towards
explaining these expression patterns, it searches for a
common motif in the upstream regions of genes assigned
to the same module. It then iteratively renes the model,
trying to optimize the extent to which the expression
prole can be predicted transcriptionally. For example,
we might want to move a gene g whose promoter region
does not match its current modules motif prole, to
another module whose expression prole is still a good
match, and whose motif prole is much closer. Given these
assignments, we could then learn better motif models and
motif proles for each module. This renement process
arises naturally within our algorithm, as a byproduct of the
expectation maximization (EM) algorithm for estimating
the model parameters.

Bioinformatics 19(Suppl. 1) c(cid:2) Oxford University Press 2003; all rights reserved.

i273

D
o
w
n
l
o
a
d
e
d




f
r
o
m
h
t
t
p
:
/
/
b
i
o
i
n
f
o
r
m
a
t
i
c
s
.
o
x
f
o
r
d
j
o
u
r
n
a
l
s
.

o
r
g
/

b
y



g
u
e
s
t




o
n
O
c
t
o
b
e
r


3

,


2
0
1
6

E.Segal et al.

data selection

Expression data

Upstream sequences

data selection

Clustering

Gene partition

Motif
search

E-step

M-step

Motif set

XXXX

Transcriptional modules

Add/Delete motifs
Transcriptional module discovery procedure

Annotation
analysis

Gene annotations (GO)

Visualization & analysis

Protein complexes

Post-processing

D
o
w
n
l
o
a
d
e
d




f
r
o
m
h
t
t
p
:
/
/
b
i
o
i
n
f
o
r
m
a
t
i
c
s
.
o
x
f
o
r
d
j
o
u
r
n
a
l
s
.

o
r
g
/

b
y



g
u
e
s
t




o
n
O
c
t
o
b
e
r


3

,


2
0
1
6

Fig. 1. Schematic ow diagram of our proposed method. The pre-processing step includes selecting the input gene expression and upstream
sequence data. The model is then trained using EM, and our algorithm for dynamically adding and deleting motifs. It is then evaluated on
additional data sets.

In general, the motifs learned will not sufce to char-
acterize all of the modules. As our goal is to provide a
genome-wide explanation of the expression behavior, our
algorithm identies poorly explained genes in modules
and searches for new motifs in their upstream regions. The
new motifs are then added to the model and subsequently
rened using EM. As part of this dynamic learning
procedure, some motifs may become obsolete and are
removed from the model. The algorithm iterates until
convergence, adding and deleting motifs, and rening
motif models and module assignments.

Our algorithm has several important advantages over
other attempts to relate upstream sequences and expres-
sion data. First, we use both expression and sequence
data together, requiring that modules display a coherent
prole for both. This approach allows us to rene both the
cluster assignments and motifs within the same algorithm.
In contrast, many approaches (e.g. Brazma et al., 1998;
Liu et al., 2001; Roth et al., 1998; Sinha and Tompa,
2000; Tavazoie et al., 1999) use gene expression mea-
surements to dene clusters of genes that are potentially
co-regulated, and then search for common motifs in
the upstream regions of the genes in each cluster. The
expression analysis and motif nding are thus decoupled,
and neither the clusters nor the motifs are re-evaluated
once they are learned. Other approaches (e.g. Bussemaker
et al., 2001; Pilpel et al., 2001) work in the opposite
direction, rst identifying a set of candidate motifs, and
then trying to explain the expression using these motifs.
However,
these approaches use a prespecied set of
motifs, which are never adapted during the algorithm.

Our approach is based on the framework of Segal et
al. (2002) but extends it in several important directions.

First,
their approach made use of DNA localization
data, which are not widely available for all organisms
and under multiple growth conditions. In contrast, we
construct models that are based solely on sequence and
expression data, which are much easier to obtain. Second,
their approach used a predetermined number of motifs to
construct the model. To allow a genome-wide analysis, our
algorithm dynamically removes and adds motifs as needed
to explain the expression data as a whole. Finally, while
the models of Segal et al. (2002) allowed for detection of
context-specic regulation, the resulting structure is hard
to interpret. Our model assigns each gene to one module,
facilitating interpretability.

We tested our method on two distinct Saccharomyces
cerevisiae expression datasets. We show that our learned
models nd motifs that account for a much larger frac-
tion of the observed expression patterns in comparison to
standard approaches that rst cluster the expression pro-
les and then search for motifs in the upstream regions
of the genes in each cluster. Our approach also recovers a
much larger number of known motifs. We evaluated the
functional coherence of our transcriptional modules us-
ing a gene functional annotation database and two pro-
tein complex databases that were not given to the model
as input. We found enrichment for many more groups in
our models compared to standard approaches, suggesting
that our transcriptional modules are biologically more ac-
curate. Finally, we used the recent binding assays of Lee
et al. (2002) to relate the actual transcription factors to the
modules they regulate, resulting in a regulatory network;
we show that many of the regulatory relationships discov-
ered have support in the literature.

i274

PROBABILISTIC MODEL
The basic entities in our model are the genes in some set
G. Weassume that the genes are partitioned into a set
of K mutually exclusive and exhaustive transcriptional
modules. Thus, each gene is associated with an attribute
M  {1, . . . , K} whose value represents the module
to which the gene belongs. We now describe how these
modules are related to expression proles and to motif
proles.

Gene expression model For each gene g in G, we
have expression measurements g.E1, . . . , g.E J , where
g.E j represents the log ratio mRNA expression level
measured for gene g in experiment
j. Weassume that
all of the genes in a single module exhibit the same
gene expression behavior, and use the simple yet powerful
Naive Bayes model (Cheeseman and Stutz, 1995) to
represent this behavior. In this model, as applied in our
setting, we assume that the expression measurements are
conditionally independent given the module assignment:

P(E1, . . . , E J | M) = J(cid:1)

P(E j | M).

j=1

As the expression measurements are real-valued, we
|
model each conditional probability distribution P(E j
M = m) using a Gaussian distribution N ( jm;  jm ).
Motif model The second key component in our model
is a set of variables that represent the regulation of the
gene by motifs. For each gene g, we have a set of
binary-valued Regulates variables R = {R1, . . . , RL},
where g.Ri takes the value true if motif i appears in the
promoter region of gene g, allowing the motif to play a
regulatory role in the genes expression. We model the
motif using a standard position specic scoring matrix
(PSSM Bailey and Elkan, 1994; Roth et al., 1998), which
assigns a weight to each position in the motif and each
nucleotide (cid:2)  {A, C, G, T}; this weight represents the
extent to which the nucleotides presence in this position
is associated with the motif.

We use the discriminative PSSM approach of Segal et al.
(2002), which trains the PSSM weights to discriminate as
much as possible between the presence and the absence
of the motif. This approach provides better predictions,
and entirely avoids the problems arising from high-
frequency but meaningless motifs that are common in
many upstream sequences. This model is specied using
a standard binary logistic model. We have p position-
specic weights w j[(cid:2)], one for each position j and each
letter (cid:2)  {A, C, G, T}, and a threshold w0. For a
promoter sequence of length N , weassume that binding
occurs once, and with equal probability at each of the N 
p + 1 possible positions in the sequence. The probability

Genome-wide discovery of transcriptional modules

P(g. R |g.S)

P(g.R |g .S )

g. M

P(g.E | g.M)

g.S 1

g.S 2

g.S 3

g. M

R R

1

2

3

CPD  1

0

0

0

1

2

3

g.R1

g.R2

g.M

CPD 2

CPD 3

g.E1

g.E2

g.E3

Fig. 2. Illustration of our unied probabilistic model, for a simple
example with upstream regions of length three,
two sequence
motifs, three possible module assignments and three expression
measurements for each gene

(cid:2)

(cid:2)

of binding given the sequence is then specied simply as:
P(g.R = true | S1, . . . , Sn) =
n p+1(cid:3)
j=1

exp{ p(cid:3)

wi[Si+ j1]}

n  p + 1

(cid:4)(cid:4)

logit

log

i=1

w0

.

Regulation model We dene the motif prole of a
transcriptional module to be a set of weights umi , one for
each motif, such that umi species the extent to which
(cid:5)
motif i plays a regulatory role in module m. Roughly
speaking, the strength of the association of a gene g with a
L
i=1 g.Ri umi . The stronger the association
module m is
of a gene with a module, the more likely it is to be
assigned to it. We model this using a softmax conditional
distribution, a standard extension of the binary logistic
conditional distribution to the multi-class case:

P(g.M = m | R1 = r1, . . . , RL = rL ) =

exp{(cid:5)
m(cid:4)=1 exp{(cid:5)
(cid:5)

K

L

i=1 u miri}

L

i=1 um(cid:4)iri} .

As we expect a motif to be active in regulating only
a small set of modules in a given setting, we limit the
number of weights u1i , . . . ,u K i that are non-zero to some
h (cid:5) K . This restriction results in a sparse weight
matrix for P(M | R), and ensures that each regulator
affects at most h modules. In addition, for interpretability
considerations, we require all weights to be non-negative.
Intuitively, this means that a genes assignment to specic
transcriptional modules can only depend on features that
correpond to the presence of certain motifs and not on the
abscence of motifs. For a module m, the set of motifs umi
that are non-zero are called the motif prole of m.

i275

D
o
w
n
l
o
a
d
e
d




f
r
o
m
h
t
t
p
:
/
/
b
i
o
i
n
f
o
r
m
a
t
i
c
s
.
o
x
f
o
r
d
j
o
u
r
n
a
l
s
.

o
r
g
/

b
y



g
u
e
s
t




o
n
O
c
t
o
b
e
r


3

,


2
0
1
6

E.Segal et al.

Unied model These three components, are put together
as a probabilistic graphical model, as shown in Figure 2;
the model denes the following joint distribution:

P(g.Ri | g.S)  P(g.M | g.R)  J(cid:1)

P(g.R, g.M, g.E | g.S) =
L(cid:1)
i=1

j=1

P(g.Ej | g.M),

where each of the above conditional probability distribu-
tions is parameterized as described in the previous sec-
tions.

LEARNING THE MODELS
In the previous section, we presented our probabilistic
model. We now turn to the task of learning this model from
data. Our data set D consists of a set of genes G, where
for each gene g  G we have a set of gene expression
measurements g.e j for j = 1, . . . , J and a DNA sequence
g.S in the upstream region of the transcription start site
for g. For this section, we restrict attention to a xed
number of motifs, and address the problem of estimating
the model parameters to t the data. The model parameters
to be estimated are:
the means and variances of the
normal distributions of the expression model, the softmax
weights and structure of the module assignments (i.e.
which sequence motifs each module depends on), and the
PSSM weights for each sequence motif.

We follow the standard approach of maximum likelihood
estimation: we nd the parameters  that maximize
P(D | ). Our learning task is made considerably more
difcult by the fact that both the module assignment g.M
and the Regulates variables g.R are unobserved in the
training data. In this case, the likelihood function has
multiple local maxima, and no general method exists for
nding the global maximum. We thus use the Expectation
Maximization (EM) algorithm (Dempster et al., 1977),
which provides an approach for nding a local maximum
of the likelihood function.

Starting from an initial guess (0) for the parameters,
EM iterates the following two steps. The E-step computes
the distribution over the unobserved variables given the
observed data and the current estimate of the parameters.
We use the hard assignment version of the EM algorithm,
where this distribution is used to select a likely completion
of the hidden variables. The M-step then re-estimates the
parameters by maximizing the likelihood with respect to
the completion computed in the E-step. This estimation
task differs for the different parts of the model.

E-step: inferring modules and regulation Our task in the
E-step is to compute the distribution over the unobserved
data, which in our setting means computing P(g.M, g.R |
g.E, g.S). Asgenes are assumed to be independent,

i276

this computation can be done separately for each gene.
However, although the softmax distribution for P(g.M |
g.R) has a compact parameterization, inference using this
distribution is still exponential in the number of Regulates
variables. Even if only a small number of these variables
is associated with any single module, for the purpose of
module assignment we need to consider all of the variables
associated with any module; this number can be quite
large, rendering exact inference intractable.

We devise a simple approximate algorithm for doing
this computation, which is particularly well-suited for
our setting. It exploits our expectation that, while a large
number of sequence motifs determine module assignment,
only a small number of motifs regulate a particular
transcriptional module. Consequently, given the module
assignment for a gene, we expect a small number of
Regulates variables for that gene to take the value true.
Our approximate algorithm therefore searches greedily
for a small number of Regulates variables to activate for
each module assignment. For each gene g, itconsiders
every possible module assignment m, and nds a good
assignment to the Regulates variables given that g.M =
m. This assignment
is constructed in a greedy way,
by setting g.R variables to true one at a time, as
long as P(g.M, g.R, g.E | g.S) improves. The joint
setting for g.M and g.R which gives the overall best
likelihood is then selected as the (approximate) most likely
assignment. For the remainder of this section, let g. m and
g.r1, . . . , g.rL represent the values selected for g.M and
g.R1, . . . , g.RL respectively by the E-step. Full details of
the algorithm are given in Figure 3a.

M-step: expression model Given the assignments of
genes to modules as computed in the E-step, the maximum
likelihood setting for the parameters of the expression
model Gaussian distributions has a closed form solution.
Letting Nm be the number of genes assigned to module m,
we have that the mean and variance of the Gaussian for
experiment j given module assignment m are

(cid:3)

gG : g. m=m
(cid:3)

g.e2
j

g.e j

 2

jm

.

m j = 1
Nm

and

 2
m j

= 1
Nm

gG : g. m=m

the motif model

M-step: motif model We want
to
be a good predictor of the assignment r to the Reg-
for
ulates variables computed in the E-step. Thus,
each Ri , weaim to nd the values of the parameters
w0, w j[(cid:2)] that maximize the conditional log probabil-
| g.S1, . . . , g.Sn). Unfortunately,
ity
this optimization problem has no closed form solution,

gG log P(g.ri

(cid:5)

D
o
w
n
l
o
a
d
e
d




f
r
o
m
h
t
t
p
:
/
/
b
i
o
i
n
f
o
r
m
a
t
i
c
s
.
o
x
f
o
r
d
j
o
u
r
n
a
l
s
.

o
r
g
/

b
y



g
u
e
s
t




o
n
O
c
t
o
b
e
r


3

,


2
0
1
6

Genome-wide discovery of transcriptional modules

For each gene g  G
Set g.M = 1
Set g.Ri = false for 1  i  L
Set p = P(g.M, g.R | g.S, g.E)
For m = 1 to K // for all modules
Repeat // Find g.Ri that increases p
Set pbest = p
For i = 1 to L // for all regulates variables
Set g.Ri = true
(cid:4) = P(g.M = m, g.R | g.S, g.E)
p
(cid:4) > p
if p
Set g.M = m
(cid:4)
Set p = p
else
Set g.Ri = false

Until pbest = p

Set U = {}
Set iteration = 0
Let V = {vmi}1mK ,1iL
Set MaxScore = maxV Score[V]
// MaxScore = score of unconstrained t
Set T = Threshold for closeness to MaxScore
Repeat
Set iteration = iteration + 1
(cid:4) = {u
Let U
(cid:4) = argmaxU(cid:4)0Score[U
Set U
// Optimize weights not in U; weights in U xed
For i = 1 to L // for all regulates variables
(cid:6){u
(cid:4)
Let m = argmaxm{u
}1mK
Set U = U
} // Add new non-zero weight
mi
Set U = argmaxU0Score[U, 0]
// Reoptimize weights in U; other weights = 0
Until iteration = max iteration or Score[U] >= MaxScore  T

}1mK ,1iL  U
(cid:4), U]

(cid:4)
mi

(cid:4)
mi

(cid:4) = U
= 0 for 1  m  K

Delete:
For i = 1 to L // for all regulates variables
Set U
(cid:4)
Set u
If Score[U]  Score[U
mi
Delete Ri
Set U = U

(cid:4)]  threshold

(cid:4)

Add:
For m = 1 to K // for all modules
Let G(cid:4) = {}
For each g s.t. g. m = m
Set g.r(cid:4) = argmaxr P(g.r | g.S)
Set G(cid:4) = G(cid:4)(cid:6){g}
Set g.m
(cid:4) (cid:8)= m
If m
Learn motif with positive set G(cid:4)
Add new Regulates variable with learned PSSM

(cid:4) = argmaxm P(g.M = m | g.R = g.r(cid:4))

(a)

(b)

(c)

Fig. 3. (a) Search procedure for E-step of EM. (b) Learning the softmax distribution for P(g.M | g.R) in the M-step. (c) Procedure
Score[U] =(cid:5)
for dynamically deleting and adding Regulates variables. In (b) and (c), U denotes the non-zero weights of PU (g.M | g.R), and

gG log PU (g. m | g.r).

and there are many local maxima. We therefore use a
conjugate gradient ascent to nd a local optimum in the
parameter space. Conjugate gradient starts from an initial
guess of the weights (cid:9)w(0). Asfor all local hill climbing
methods, the quality of the starting point has a huge
impact on the quality of the local optimum found by
the algorithm. We therefore initilize the weights using
the method of Barash et al. (2001), which efciently
generates motif seeds of length 615 and then scores them
using the hypergeometric signicance test. Each seed
produced by this method is then expanded to produce a
PSSM of the desired length, whose weights serve as an
initialization point for the conjugate gradient procedure.

(cid:5)

M-step: regulation model Finally, we consider the task
of estimating the parameters for the distribution P(g.M |
g.R). Our goal is to nd a setting for the softmax weights
{umi}1mK ,1iL so as to maximize the conditional log
gG log P(g.M = g. m | g.R = g.r).
probability
Although this optimization does not have a closed form
solution, the function is convex in the weights of the
softmax. Thus, a unique global maximum exists, which
we can nd using gradient ascent.

However, as we discussed in the previous section, we
also constrain this weight matrix to be sparse and each
weight to be non-negative. These constraints lead to more
desirable models, but also turn our task into a hard
combinatorial optimization problem. We use a greedy
selection algorithm, that tries to include non-zero weights
for the most predictive motifs for each Regulates variable
Ri . The algorithm, shown in Figure 3b, rst nds the
optimal setting to the full weight matrix; as we discussed,
the optimal setting can be found using gradient ascent.
For each variable Ri , itthen selects the most predictive
motifthe one whose weight is largestand adds it to the

motif prole U , which contains motifs that have non-zero
weight. The optimal setting for the weights in U is then
found by optimizing these weights, under the constraint
that each weight in U is non-negative and the weights
not in U must be zero. This problem is also convex, and
can be solved using gradient methods. The algorithm then
continues to search for additional motifs to include in
the prole U . Itnds the optimal setting to all weights
while holding the weights in U xed; it then selects the
highest weight motifs not in U , adds them to U , and
repeats. Weights are added to U until the sparseness limit
is reached, or until the addition of motifs to U does not
improve the overall score.

DYNAMICALLY ADDING AND REMOVING
SEQUENCE MOTIFS
In the previous section, we showed how to optimize the
model parameters given a xed set of motifs. We now
wish to devise a dynamic learning algorithm, capable of
both removing and adding sequence motifs as part of the
learning process. As we learn the models, some motifs
may not turn out to be predictive, or redundant given the
newly discovered motifs. Conversely, some modules may
not be well explained by sequence motifs, so that new
motifs should be added.

(cid:5)

We add and remove motifs after each completion of the
EM algorithm. (Note that EM itself iterates several times
between the E-step and the M-step.) To determine whether
Ri should be deleted, we compute the conditional log
gG log P(g.m | g.r) both with and without
probability
leaving the values of other Regulates variables
g.Ri ,
xed. This computation tells us the contribution that Ri
makes towards the overall t of the model. Variables
that contribute below a certain threshold are subsequently
removed from the model.

i277

D
o
w
n
l
o
a
d
e
d




f
r
o
m
h
t
t
p
:
/
/
b
i
o
i
n
f
o
r
m
a
t
i
c
s
.
o
x
f
o
r
d
j
o
u
r
n
a
l
s
.

o
r
g
/

b
y



g
u
e
s
t




o
n
O
c
t
o
b
e
r


3

,


2
0
1
6

E.Segal et al.

We try to add motifs when the current set of motifs does
not provide a satisfactory explanation of the expression
data: when there are genes for which the sequence
predictions do not match the expression prole. We dene
the residual for a transcriptional module m to be the set
of genes that are assigned to module m in the E-step, but
would not be assigned to m based on the sequence alone.
We determine the sequence-only assignment of each gene
by computing

g.r

(cid:4) = argmaxr P(g.r | g.S)

and

(cid:4) = argmaxm P(g.M = m | g.R = g.r
(cid:4)).

g.m

We then attempt to provide a better prediction for the
residual genes by adding a sequence motif that is trained
to match these genes. Once a new Regulates variables is
added, it becomes part of the model and its assignment
and parameterization is adapted as part of the next
EM iteration, as described in the previous section. This
process tests whether a new motif contributes to the
overall model t, and may assign it a non-zero weight.
Importantly, a motif that was trained for the residuals
of one module often gets non-zero weights for other
modules as well, allowing the same motif to participate in
multiple modules. Full details of the algorithm are given
in Figure 3c.

RESULTS
Models learned We evaluated our method separately on
two different S.cerevisiae gene expression datasets, one
consisting of 173 microarrays, measuring the responses to
various stress conditions (Gasch et al., 2000), and another
consisting of 77 microarrays, measuring expression during
cell cycle (Spellman et al., 1998). We also obtained the
500bp upstream region of each gene (sequences were
retrieved from SGD (Cherry et al., 1998)).

The EM algorithm requires an initial setting to all pa-
rameters. We use the standard procedure for learning mo-
tifs from expression data to initialize the model parame-
ters: we rst cluster the expression proles, resulting in a
partition of genes to clusters, and then learn a motif for
each of the resulting clusters. For clustering the expres-
sion, we use the probabilistic hierarchical clustering algo-
rithm of Segal et al. (2001). For learning motifs, we use
the motif nder described above. To specify the initial pa-
rameterization of our model, we treat these clusters and
motifs as if they were the result of an E-step, assigning a
value to all of the variables g.M and g.R, and learn the
model parameters as described above.

For the stress data, we use 1010 genes which showed
a signicant change in expression, excluding members of
the generic stress response cluster (Gasch et al., 2000).

i278

i

d
e
t
c
d
e
r
P
y

l
t
c
e
r
r
o
C
s
e
n
e
G
m
u
N

350

330

310

290

270

250

230

210

190

170

150

Cell cycle model
Stress model

1

2

3

4
Num Iterations

5

6

Fig. 4. Number of genes whose module assignment can be correctly
predicted based on sequence alone, where a correct prediction is
one that matches the module assignemnt when the expression is
included. Predictions are shown for each iteration of the learning
procedure.

We initialized 20 modules using standard clustering, and
learned the associated 20 sequence motifs. From this
starting point, the algorithm converged after 5 iterations,
of an EM step and a motif addition/deletion step, resulting
in a total of 49 motifs. For the cell cycle data, we
learned a model with 15 clusters over the 795 cell cycle
genes dened in (Spellman et al., 1998). The algorithm
converged after 6 iterations, ending with 27 motifs.

Predicting expression from sequence Our approach aims
to explain expression data as a function of sequence
motifs. Hence, one metric for evaluating a model is its
ability to associate genes with modules based on their
promoter sequence alone. Specically, we compare the
module assignment of each gene when we consider only
the sequence data to its module assignment considering
both expression and sequence data. Figure 4 shows the
total number of genes whose expression-based module
assignment is correctly predicted using only the sequence,
as the algorithm progresses and sequence motifs are
added. As can be seen, the predictions improve across
the learning iterations, and signicantly outperform the
standard approach (which is iteration 1). Ultimately, our
model converges to 340 and 296 genes correctly predicted
in the cell cycle and stress models, respectively, compared
to 158 and 152 for the standard approach.

Gene expression coherence These results indicate that
our model assigns genes to modules such that genes
assigned to the same module are generally enriched for
the same motifs. However, we can achieve such an orga-
nization by simply assigning genes to modules based only
on their sequence, while entirely ignoring the expresssion
data. To verify the quality of our modules relative to gene
expression data, we dene the expression coherence of
a module to be the average Pearson correlation between
each pair of genes assigned to it, where the Pearson

D
o
w
n
l
o
a
d
e
d




f
r
o
m
h
t
t
p
:
/
/
b
i
o
i
n
f
o
r
m
a
t
i
c
s
.
o
x
f
o
r
d
j
o
u
r
n
a
l
s
.

o
r
g
/

b
y



g
u
e
s
t




o
n
O
c
t
o
b
e
r


3

,


2
0
1
6

)
d
o
h
t
e
m

r
u
o
(
e
c
n
e
r
e
h
o
c
n
o
s
s
e
r
p
x
E

i

)
d
o
h
t
e
m

r
u
o
(

e
c
n
e
r
e
h
o
c
n
o
s
s
e
r
p
x
E

i

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

0

0.1

0.8
Expression coherence (standard clustering)

0.2

0.5

0.7

0.3

0.4

0.6

(a)

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

0

0.1

0.9
Expression coherence (standard clustering)

0.4

0.6

0.8

0.2

0.5

0.3

0.7

Genome-wide discovery of transcriptional modules

7

6

5

4

3

2

1

0

d
o
h
t
e
m

r
u
o
r
o
f

l

)
e
u
a
v
p
(
g
o
L
-

0

2

4

6

8

10

12

14

0

1

2

3

4

5

6

7

-Log(pvalue) for standard clustering

-Log (pvalue) for standard clustering

(b)

(c)

d
o
h
t
e
m

r
u
o
r
o
f

l

)
e
u
a
v
p
(
g
o
L
-

9

8

7

6

5

4

3

2

1

0

0

1

2

3

4

5

6

7

8

9

-Log (pvalue) for standard clustering

0

5

10

15

20

25

30

35

-Log(pvalue) for standard clustering

14

12

10

8

6

4

2

0

d
o
h
t
e
m

r
u
o
r
o
f

l

)
e
u
a
v
p
(
g
o
L
-

35

30

25

20

15

10

5

0

d
o
h
t
e
m

r
u
o
r
o
f

l

)
e
u
a
v
p
(
g
o
L
-

(d)

(e)

(f)

Fig. 5. Comparison of standard clustering and the proposed method. (a)(c) are for the cell cycle dataset (Spellman et al., 1998) and (d)(f)
are for the stress expression dataset (Gasch et al., 2000). (a), (d) Comparison of the expression coherence for each inferred module (or cluster
in the standard clustering model). (b), (e) Comparison of enrichment of the targets of each motif for functional annotations from the GO
database. For each annotation, the largest negative log p-value obtained from analyzing the targets of all motifs is shown. (c), (f) Comparison
of enrichment of the targets of each motif for protein complexes. For each protein complex, shown is the largest negative log p-value obtained
from any of the motifs.

correlation is
Pearson(gi .E, g j .E) = 1
L

L(cid:3)
l=1

(gi .El  i )

(g j .El   j )

i

 j

,

where i , i are the mean and standard deviation of
the entries in gi .E. Figure 5a,d compares the expression
coherence of our modules to those built from standard
clustering for the cell cycle and stress data, showing
identical coherence of expression proles. For the cell
cycle data,
increase in the
coherence of the expression proles for our model. Thus,
our model results in clusters that are more enriched for
motifs, while achieving the same quality of expression
patterns as standard clustering which only tries to optimize
the expression score.

there was even a slight

Coherence of motif targets As we discussed, the motif
prole characterizing a module allows us to dene a notion
of motif targetsgenes that contain the motif, and where
the motif plays a role in its expression prole, i.e. those

assigned to a module whose motif prole contains the
motif. In the standard clustering model, we can dene the
targets of a motif to be those genes that have the motif and
belong to the cluster from which the motif was learned.

We tested whether our motif targets correspond to
functional groups, by measuring their enrichment for
genes in the same functional category according to the
gene annotation database of GO (Ashburner et al., 2000).
We used only GO categories with 5 or more genes
associated with them, resulting in 537 categories. For each
annotation and each motif, we computed the fraction of
genes in the targets of that motif associated with that
annotation and used the hypergeometric distribution to
calculate a p-value for this fraction, and took p-value <
0.05 to be signicant. We compared, for both expression
data sets, the enrichment of the motif targets for GO
annotations between our model and standard clustering.
We found many annotations that were enriched in both
models. However, there were 24 and 29 annotations that
were signicantly enriched in our cell cycle and stress

i279

D
o
w
n
l
o
a
d
e
d




f
r
o
m
h
t
t
p
:
/
/
b
i
o
i
n
f
o
r
m
a
t
i
c
s
.

o
x
f
o
r
d
j
o
u
r
n
a
l
s
.

o
r
g
/

b
y



g
u
e
s
t




o
n
O
c
t
o
b
e
r


3

,


2
0
1
6

E.Segal et al.

models, respectively, that were not enriched at all in the
standard clustering model, compared to only 4 and 14
categories only enriched in the standard clustering model
for these respective models. Among those categories
enriched only in our model were carbohydrate catabolism,
cell wall organization and galactose metabolism, all of
which are processes known to be active in response to
various stress conditions that we can now characterize by
sequence motifs. A full comparison of the GO enrichment
for both datasets is shown in Figure 5b,e.

Since functional categories do not necessarily cor-
respond to co-regulation groups, we also tested the
enrichment of our motif targets for protein complexes,
as compiled experimentally in the assays of Gavin et al.
(2002) and Ho et al. (2002), consisting of 590 and 493
complexes, respectively. The member genes of protein
complexes are often co-regulated and we thus expect
to nd enrichment for them in our motif targets. We
associated each gene with the complexes it is assigned
to in each protein complex dataset and computed the
p-value of the enrichment of the targets of each motif
for each complex, as we did above for the GO annota-
tions. The results for the cell cycle and stress datasets
are summarized in Figure 5c,f, showing much greater
enrichment of our motif targets than the targets of the
motifs identied using the standard approach, with 63 and
10 complexes signicantly enriched only in our model,
and no complexes only enriched in the standard approach,
for the stress and cell cycle models, respectively.

Motifs and motif proles We compared the motifs we
identied to motifs from the literature. Of the 49 motifs
learned for the stress model, 22 are known, compared
to only 10 known motifs learned using the standard
approach. For the cell cycle model, 15 of the 27 learned
motifs are known, compared to only 8 known motifs
learned using the standard approach. Many of the known
motifs identied, such as the stress element STRE, the
heat shock motif HSF and the cell cycle motif MCM1, are
also known to be active in the respective datasets.

A powerful feature of our approach is its ability to
characterize modules by motif proles. This ability is
particularly important for higher eukaryotes, in which
regulation often occurs through multiple distinct motifs.
To illustrate the motif proles found by our approach, we
found for each motif all modules enriched for the presence
of that motif. This was done by associating each gene with
the motifs in its upstream region, and then computing the
p-value of the enrichment of the member genes of each
module. Figure 6a shows all the module-motif pairs in
which the module was enriched for the motif with p-value
<0.05. In addition, the gure indicates (by red circles) all
pairs in which the motif appears in the modules motif
prole. As can be seen, many of proles contain multiple

i280

motifs, and many motifs were used by more than one
module. Even though modules share motifs, each module
is characterized by a unique combination of motifs.

Identifying the active mo-
Inferring regulatory networks
tifs is a signicant step towards understanding the regula-
tory mechanisms governing gene expression. However, we
would also want to know the identity of the transcription
factor (TF) molecules that bind to these sequence motifs.
We used the DNA binding assays of Lee et al. (2002),
that directly detect to which promoter regions a particular
TF binds in vivo, and associated TFs with the motifs we
learned. For each motif, we computed the fraction, among
the motif targets, of genes bound by each TF, as measured
in the data of Lee et al. We used the hypergeometric distri-
bution to assign a p-value to each such fraction and took
p-value <0.05 to be signicant. Inspection of the signi-
cant associations showed that, in most cases, there was a
unique motif that was signicant for the TF and that a high
fraction (>0.5) of the TFs binding targets were among the
motif target genes.

Based on this strong association between TFs and
motifs, for each such TF-motif pair, we predicted that
the TF regulates all the modules that are characterized
by the motif. By combining all associations, we arrived
at the regulatory network shown in Figure 6b. Of the
106 transcription factors measured in Lee et al., 28were
enriched in the targets of at least one motif and were
thus added to the resulting network. Of the 20 modules,
16 were associated with at least one TF. To validate
the quality of the network, we searched the biological
literature and compiled a list of experimentally veried
targets for each of the 28 TFs in our network. We then
marked each association between a TF and a module as
supported if the module contains at least one gene that the
TF is known to regulate from biological experiments. As
current knowledge is limited, there are very few known
targets for most TFs. Nevertheless, we found support
for 21 of the 64 associations. We also computed the p-
value for each supported association between a TF and a
module, using the binomial distribution with probability
of success p = t /N , where K is the total number of
known targets for the TF and N is the total number of
genes (1010). The p-value is then P(X  (cid:2) | X 
B( p, n)), where (cid:2) is the total number of known targets of
the regulator in the supported module and n is the number
of genes in the supported module. The resulting p-values
are shown in Figure 6b by edge thickness and color.

We assigned a name to each module based on a concise
summary of its gene content (compiled from both gene
annotation and literature). The regulatory network thus
contains predictions for the processes regulated by each
TF, where for each association the prediction includes
the motif through which the regulation occurs. In many

D
o
w
n
l
o
a
d
e
d




f
r
o
m
h
t
t
p
:
/
/
b
i
o
i
n
f
o
r
m
a
t
i
c
s
.
o
x
f
o
r
d
j
o
u
r
n
a
l
s
.

o
r
g
/

b
y



g
u
e
s
t




o
n
O
c
t
o
b
e
r


3

,


2
0
1
6

1

2

3

6

7

9

1
1

2
1

3
1

4
1

5
1

6
1

7
1

1
2

7
2

9
2

0
3

1
3

3
3

4
3

6
3

9
3

2
4

8
4

1
5

4
5

5
5

0
6

1
6

Genome-wide discovery of transcriptional modules

0
1

5
1

5

2
1

7
1

2

4
1

9
1

1
1

7

9

1

6
1

6

3
1

0
1

3

8

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

o
M

o
M

o
M

o
M

o
M

o
M

o
M

o
M

o
M

o
M

o
M

o
M

o
M

o
M

o
M

o
M

o
M

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

f
i
t

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

o
M
d
e
d
d
A

f
i
t

o
M
d
e
d
d
A

0
2

4

f
i
t

f
i
t

o
M

o
M

19  Glycolysis (80)
18  Redox regulation (10)
17  Mixed I (74)
16  Protein folding (45)
15  Chromatin remodeling (8)
14  Energy and TCA cycle (66)
13  Oxidative phosphorylation (31)
12  Unknown I (75)
11  Nitrogen metabolism (35)
10  Cell cycle (44)
9  Protein folding (47)
8  Ergosterol biosynthesis (65)
7  Sucrose metabolism (55)
6  Translation (80)
5  Heat shock (61)
4  Pheromone response (93)
3  Transport (30)
2  Aldehyde metabolism (34)
1  Galactose metabolism (15)
0  Amino acid metabolism (52)

15

5

8

1
d
a
C

1
r
c
G

2
r
i

H

1
s
m
H

l

2
8
a
D

4
a
h
C

4
p
a
H

1

t

a
G

2
1
e
S

t

i

4
w
S

1

f
z
F

1
g
r
N

i

5
w
S

17 18

11

9

12

19

1

14

13

0

4

i

6
w
S

2
r
c
G

3
n
G

l

1
g
M

i

1
x
f
R

6

t

o
D

1
z
r
C

3
p
a
Y

1

f

b
C

1
h
k
F

0
8
o
r
A

t

4
e
M

1
8
g
r
A

1
g
D

i

1
r
d
P

3

7

16

10
Supported (p<.001)
Supported (p<.05)

6

2
Supported (p>.05)
Not supported

Fig. 6. (a) Matrix of motifs vs. modules for the stress data, where a module-motif entry is colored if the member genes of that module were
enriched for that motif with p-value <0.05. The intensity corresponds to the fraction of genes in the module that had the motif. Entries in the
modules motif prole are circled in red. Modules were assigned names based on a summary of their gene content. (b) Regulatory network
inferred from our model using the DNA binding assays of Lee et al.. Ovals correspond to transcription factors and rectangles to modules (see
(a) for module names).

cases, our approach recovered coherent biological pro-
cesses along with their known regulators. Examples of
such associations include: Hap4, the known activator of
oxidative phosphorylation, with the oxidative phospho-
rylation module (13); Gcr2, a known positive regulator
of glycolysis, with the glycolysis module (19); Mig1, a
glucose repressor, with the galactose metabolism module
(1); Ste12, involved in regulation of pheromone pathways,
with the pheromone response module (4); and Met4, a
positive regulator of sulfur amino acid metabolism, with
the amino acid metabolism module (0).

CONCLUSIONS
We presented a unied probabilistic model over both gene
expression and sequence data, whose goal is to identify
transcriptional modules and the regulatory motif binding
sites that control their regulation within a given set of ex-
periments. Our results indicate that our method discovers
modules that are both highly coherent in their expression
proles and signicantly enriched for common motif bind-
ing sites in upstream regions of genes assigned to the same
module. A comparison to the common approach of con-
structing clusters based only on expression and then learn-
ing a motif for each cluster shows that our method recovers
modules that have a much higher correspondence to exter-
nal biological knowledge of gene annotations and protein
complex data.

