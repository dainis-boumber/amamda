An Introduction to Nonlinear Dimensionality Reduction

by Maximum Variance Unfolding

Kilian Q. Weinberger and Lawrence K. Saul

Department of Computer and Information Science, University of Pennsylvania

Levine Hall, 3330 Walnut Street, Philadelphia, PA 19104-6389

{kilianw,lsaul}@cis.upenn.edu

Abstract

Many problems in AI are simplied by clever representations
of sensory or symbolic input. How to discover such rep-
resentations automatically, from large amounts of unlabeled
data, remains a fundamental challenge. The goal of statis-
tical methods for dimensionality reduction is to detect and
discover low dimensional structure in high dimensional data.
In this paper, we review a recently proposed algorithm
maximum variance unfoldingfor learning faithful low di-
mensional representations of high dimensional data. The
algorithm relies on modern tools in convex optimization
that are proving increasingly useful in many areas of ma-
chine learning.

Introduction

A fundamental challenge of AI is to develop useful internal
representations of the external world. The human brain ex-
cels at extracting small numbers of relevant features from
large amounts of sensory data. Consider, for example, how
we perceive a familiar face. A friendly smile or a menac-
ing glare can be discerned in an instant and described by
a few well chosen words. On the other hand, the digital
representations of these images may consist of hundreds or
thousands of pixels. Clearly, there are much more compact
representations of images, sounds, and text than their native
digital formats. With such representations in mind, we have
spent the last few years studying the problem of dimension-
ality reductionhow to detect and discover low dimensional
structure in high dimensional data.

For higher-level decision-making in AI, the right repre-
sentation makes all the difference. We mean this quite lit-
erally, in the sense that proper judgments of similiarity and
difference depend crucially on our internal representations
of the external world. Consider, for example, the images of
teapots in Fig. 1. Each image shows the same teapot from
a different angle. Compared on a pixel-by-pixel basis, the
query image and image A are the most similar pair of im-
ages; that is, their pixel intensities have the smallest mean-
squared-difference. The viewing angle in image B, however,
is much closer to the viewing angle in the query image
evidence that distances in pixel space do not support crucial
Copyright c(cid:2) 2006, American Association for Articial Intelli-
gence (www.aaai.org). All rights reserved.

query

A

B

Figure 1: Images of teapots: pixel distances versus percep-
tual distances. As measured by the mean-squared-difference
of pixel intensities, image A is closer to the query image than
image B, despite the fact that the view in image A involves
a full 180 degrees of rotation.

judgments of similarity and difference. (Consider the em-
barrassment when your robotic butler grabs the teapot by its
spout rather than its handle, not to mention the liability when
it subsequently attempts to rell your guests cup.) A more
useful representation of these images would index them by
the teapots angle of rotation, thus locating image B closer
to the query image than image A.

Objects may be similar or different in many ways. In the
teapot example of Fig. 1, there is only one degree of free-
dom: the angle of rotation. More generally, there may be
many criteria that are relevant to judgments of similarity and
difference, each associated with its own degree of freedom.
These degrees of freedom are manifested over time by vari-
abilities in appearance or presentation.

The most important modes of variability can often be dis-
tilled by automatic procedures that have access to large num-
bers of observations. In essence, this is the goal of statis-
tical methods for dimensionality reduction (Burges 2005;
Saul et al. 2006). The observations, initially represented
as high dimensional vectors, are mapped into a lower dimen-
sional space. If this mapping is done faithfully, then the axes
of the lower dimensional space relate to the datas intrinsic
degrees of freedom.

The linear method of principal components analysis
(PCA) performs this mapping by projecting high dimen-
sional data into low dimensional subspaces. The principal
subspaces of PCA have the property that they maximize the
variance of the projected data. PCA works well if the most
important modes of variability are approximately linear. In
this case, the high dimensional observations can be very well

1683reconstructions

original

4

8

16

32

64

560

Figure 2: Results of PCA applied to a data set of face im-
ages. The gure shows a grayscale face image (right) and its
linear reconstructions from different numbers of principal
components. The number of principal components required
for accurate reconstruction greatly exceeds the small num-
ber of characteristic poses and expressions in the data set.

reconstructed from their low dimensional linear projections.
PCA works poorly if the most important modes of vari-
ability are nonlinear. To illustrate the effects of nonlinearity,
we applied PCA to a data set of 28  20 grayscale images.
Each image in the data set depicted a different pose or ex-
pression of the same persons face. The variability of faces is
not expressed linearly in the pixel space of grayscale images.
Fig. 2 shows the linear reconstructions of a particular im-
age from different numbers of principal components (that is,
from principal subspaces of different dimensionality). The
reconstructions are not accurate even when the number of
principal components greatly exceeds the small number of
characteristic poses and expressions in this data set.

In this paper, we review a recently proposed algorithm
for nonlinear dimensionality reduction. The algorithm,
known as maximum variance unfolding (Sun et al. 2006;
Saul et al. 2006), discovers faithful low dimensional repre-
sentations of high dimensional data, such as images, sounds,
and text. It also illustrates many ideas in convex optimiza-
tion that are proving increasingly useful in the broader eld
of machine learning.

Our work builds on earlier frameworks for analyzing
high dimensional data that lies on or near a low dimen-
sional manifold (Tenenbaum, de Silva, & Langford 2000;
Roweis & Saul 2000). Manifolds are spaces that are locally
linear, but unlike Euclidean subspaces, they can be globally
nonlinear. Curves and surfaces are familiar examples of one
and two dimensional manifolds. Compared to earlier frame-
works for manifold learning, maximum variance unfolding
has many interesting properties, which we describe in the
following sections.

Maximum Variance Unfolding

Algorithms for nonlinear dimensionality reduction map
i=1 to low dimensional out-
high dimensional inputs {(cid:2)xi}n
puts {(cid:2)yi}n
i=1, where (cid:2)xi  (cid:3)d, (cid:2)yi  (cid:3)r, and r (cid:4) d. The re-
duced dimensionality r is chosen to be as small as possible,
yet sufciently large to guarantee that the outputs (cid:2)yi  (cid:3)r
provide a faithful representation of the inputs (cid:2)xi  (cid:3)d.
What constitutes a faithful representation? Suppose
that the high dimensional inputs lie on a low dimensional
manifold. For a faithful representation, we ask that the dis-
tances between nearby inputs match the distances between

nearby outputs. Such locally distance-preserving represen-
tations are exactly the kind constructed by maximum vari-
ance unfolding.

The algorithm for maximum variance unfolding is based
on a simple intuition. Imagine the inputs (cid:2)xi as connected
to their k nearest neighbors by rigid rods. (The value of k
is the algorithms one free parameter.) The algorithm at-
tempts to pull the inputs apart, maximizing the sum total of
their pairwise distances without breaking (or stretching) the
rigid rods that connect nearest neighbors. The outputs are
obtained from the nal state of this transformation.

The effect of this transformation is easy to visualize for
inputs that lie on low dimensional manifolds, such as curves
or surfaces. For example, imagine the inputs as beads on a
necklace that is coiled up in three dimensions. By pulling
the necklace taut, the beads are arranged in a line, a nonlin-
ear dimensionality reduction from (cid:3)3 to (cid:3)1. Alternatively,
imagine the inputs as the lattice of sites in a crumpled sh-
ing net. By pulling on the ends of the net, the inputs are
arranged in a plane, a nonlinear dimensionality reduction
from (cid:3)3 to (cid:3)2. As we shall see, this intuition for maximum
variance unfolding also generalizes to higher dimensions.
The unfolding transformation described above can be
formulated as a quadratic program. Let ij  {0, 1} de-
note whether inputs (cid:2)xi and (cid:2)xj are k-nearest neighbors. The
outputs (cid:2)yi from maximum variance unfolding, as described
above, are those that solve the following optimization:

Maximize(cid:2)ij (cid:5)(cid:2)yi  (cid:2)yj(cid:5)2 subject to:
(1) (cid:5)(cid:2)yi  (cid:2)yj(cid:5)2 = (cid:5)(cid:2)xi  (cid:2)xj(cid:5)2 for all (i, j) with ij =1.
(2)(cid:2)i (cid:2)yi = 0
Here, the rst constraint enforces that distances between
nearby inputs match distances between nearby outputs,
while the second constraint yields a unique solution (up to
rotation) by centering the outputs on the origin.

The apparent intractability of this quadratic program can
be nessed by a simple change of variables. Note that
as written above, the optimization over the outputs (cid:2)yi is
not convex, meaning that it potentially suffers from spu-
rious local minima. Dening the inner product matrix
Kij = (cid:2)yi  (cid:2)yj, we can reformulate the optimization as a
semidenite program (SDP) (Vandenberghe & Boyd 1996)
over the matrix K. The resulting optimization is simply
a linear program over the matrix elements Kij, with the
additional constraint that the matrix K has only nonnega-
tive eigenvalues, a property that holds for all inner prod-
uct matrices.
In earlier work (Weinberger & Saul 2004;
Weinberger, Sha, & Saul 2004), we showed that the SDP
over K can be written as:
Maximize trace(K) subject to:
(1) Kii2Kij +Kjj = (cid:5)(cid:2)xi(cid:2)xj(cid:5)2 for all (i, j)
with ij =1.
(2) ijKij = 0.
(3) K (cid:6) 0.

The last (additional) constraint K (cid:6) 0 requires the ma-
trix K to be positive semidenite. Unlike the original
quadratic program for maximum variance unfolding, this
SDP is convex. In particular, it can be solved efciently with

1684polynomial-time guarantees, and many off-the-shelf solvers
are available in the public domain.

From the solution of the SDP in the matrix K, we can
derive outputs (cid:2)yi  (cid:3)n satisfying Kij = (cid:2)yi  (cid:2)yj by singu-
lar value decomposition. An r-dimensional representation
that approximately satises Kij  (cid:2)yi  (cid:2)yj can be obtained
from the top r eigenvalues and eigenvectors of K. Roughly
speaking, the number of dominant eigenvalues of K indi-
cates the number of dimensions needed to preserve local
distances while maximizing variance.
In particular, if the
top r eigenvalues of K account for (say) 95% of its trace,
this indicates that an r-dimensional representation can cap-
ture 95% of the unfolded datas variance.

Experimental Results

Right
tilt

Left
tilt

Smile

Pucker

We have used maximum variance unfolding (MVU) to ana-
lyze many high dimensional data sets of interest. Here we
show some solutions (Weinberger & Saul 2004; Blitzer et al.
2005) that are particularly easy to visualize.

Fig. 3 shows a two dimensional representation of teapot
images discovered by MVU. The data set consisted of
n=400 high resolution color images showing a porcelain
teapot viewed from different angles in the plane. The teapot
was viewed under a full 360 degrees of rotation. Each image
contained 76  101 RGB pixels, so that the pixel space had
dimensionality d = 23028. The two dimensional represen-
tation discovered by MVU is easily visualized by superim-
posing represenative images on top of their corresponding
outputs in the plane. The outputs are arranged in a circle,
reecting the cyclic degree of freedom in the data set. Note
also how this representation supports judgments of similar-
ity and difference that are not evident in the original pixel
space, as discussed in Fig. 1.

Fig. 4 shows a three dimensional representation of face
images discovered by MVU. The data set consisted of

query

B

A

Figure 4: Three dimensional representation from MVU of
n = 1960 grayscale images of faces. The superimposed im-
ages reveal a small number of characteristic actions as the
underlying degrees of freedom.

n=1960 grayscale images of the same persons face in dif-
ferent poses and expressions. Each image had 2820 pixels,
so that the pixel space had dimensionality d = 560. In con-
trast to the results from PCA in Fig. 2, the solution obtained
by MVU reveals a small number of characteristic actions
(e.g., left and right tilt, smile, pucker) as the underlying de-
grees of freedom in the data set.

Fig. 5 shows a two dimensional representation of words
discovered by MVU. The inputs to MVU were derived from
the co-occurrence statistics of the n = 2000 most frequently
occuring words in a large corpus of text. Each word was rep-
resented by a sparse d = 60000 dimensional vector of nor-
malized counts, as typically collected for bigram language
modeling. The gure shows that many semantic relation-
ships between words are preserved despite the drastic reduc-
tion in dimensionality from d = 60000 to two dimensions
(for visualization in the plane).

Table 1 compares the estimated dimensionalities of the
data sets in Figs. 35 from the results of linear versus non-
linear dimensionality reduction. The estimates from PCA
were computed from the minimum dimensionality subspace
required to contain 95% of the original datas variance. The
estimates from MVU were computed from the minimum di-
mensionality subspace required to contain 95% of the un-
folded datas variance. For all these data sets, MVU dis-
covers much more compact representations than PCA.

Figure 3: Two dimensional representation from MVU of
n = 400 images of a teapot, viewed from different angles
in the plane. The circular arrangement reects the under-
lying rotational degree of freedom. In this representation,
image B is closer to the query image than image A, unlike
in Fig. 1.

Discussion

In this paper we have described the use of maximum
variance unfolding for nonlinear dimensionality reduction.
Large-scale applications of maximum variance unfolding re-
quire one additional insight. As originally formulated, the
size of the SDP scales linearly with the number of exam-
ples, n. In previous work (Weinberger, Packer, & Saul 2005;
Sha & Saul 2005), we showed that the SDP can be tremen-

1685   MAY, WOULD, COULD, SHOULD,

MIGHT, MUST, CAN, CANNOT,

COULDN'T, WON'T, WILL

ONE, TWO, THREE,

FOUR, FIVE, SIX,

SEVEN, EIGHT, NINE,

TEN, ELEVEN,

TWELVE, THIRTEEN,
FOURTEEN, FIFTEEN,

SIXTEEN,

SEVENTEEN,

EIGHTEEN

ZERO

MILLION
BILLION

MONDAY
TUESDAY

WEDNESDAY
THURSDAY

FRIDAY

SATURDAY

SUNDAY

JANUARY
FEBRUARY

MARCH
APRIL
JUNE
JULY

AUGUST

SEPTEMBER

OCTOBER
NOVEMBER
DECEMBER

Figure 5: Two dimensional representation from MVU of the 2000 most frequently occuring words in the NAB corpus. The
representation preserves clusters of words with similar meanings.

initial
linear

nonlinear

teapots
23028

59
2

faces words
560
60000
80
4

23
6

Table 1: Dimensionalities of different data sets, as estimated
from the results of linear versus nonlinear dimensionality re-
duction. The top row shows the dimensionality of the datas
original representation.

dously simplied by factoring the n  n target matrix as
K  QLQ(cid:2), where L  Rmm and Q  Rnm with
m (cid:4) n. The matrix Q in this factorization can be pre-
computed from the results of faster but less robust methods
for nonlinear dimensionality reduction. The factorization
transforms the original SDP over the matrix K into a much
smaller SDP over the matrix L. This approach works well in
practice, enabling maximum variance unfolding to analyze
much larger data sets than we originally imagined.

One advantage of maximum variance unfolding is its ex-
ibility to be adapted to particular applications. For exam-
ple, the distance-preserving constraints in the SDP can be
relaxed to handle noisy data or to yield more aggressive re-
sults in dimensionality reduction (Sha & Saul 2005). Alter-
natively, additional constraints can be enforced to incorpo-
rate prior knowledge. Along these lines, a rather novel ex-
tension of maximum variance unfolding has been developed
for visual robot navigation and mapping (Bowling, Ghodsi,
& Wilkinson 2005). The authors use a semidenite program
to construct a map of a simulated robots virtual environ-
ment. They adapt our framework to learn from the actions
of the robot as well as the images of its environment. The
algorithm has also been applied to statistical language mod-
eling (Blitzer et al. 2005), where low dimensional represen-
tations of words were derived from bigram counts and used
to improve on traditional models. We are hopeful that appli-
cations will continue to emerge in many areas of AI.

Acknowledgments

This work was supported by NSF Award 0238323.

