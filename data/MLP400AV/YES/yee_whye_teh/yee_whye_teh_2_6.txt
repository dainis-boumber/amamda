Abstract

The Indian buffet process (IBP) is an exchangeable distribution over binary ma-
trices used in Bayesian nonparametric featural models. In this paper we propose
a three-parameter generalization of the IBP exhibiting power-law behavior. We
achieve this by generalizing the beta process (the de Finetti measure of the IBP) to
the stable-beta process and deriving the IBP corresponding to it. We nd interest-
ing relationships between the stable-beta process and the Pitman-Yor process (an-
other stochastic process used in Bayesian nonparametric models with interesting
power-law properties). We derive a stick-breaking construction for the stable-beta
process, and nd that our power-law IBP is a good model for word occurrences in
document corpora.

1 Introduction

The Indian buffet process (IBP) is an innitely exchangeable distribution over binary matrices with
a nite number of rows and an unbounded number of columns [1, 2]. It has been proposed as a
suitable prior for Bayesian nonparametric featural models, where each object (row) is modeled with
a potentially unbounded number of features (columns). Applications of the IBP include Bayesian
nonparametric models for ICA [3], choice modeling [4], similarity judgements modeling [5], dyadic
data modeling [6] and causal inference [7].
In this paper we propose a three-parameter generalization of the IBP with power-law behavior. Using
the usual analogy of customers entering an Indian buffet restaurant and sequentially choosing dishes
from an innitely long buffet counter, our generalization with parameters  > 0, c >  and
  [0, 1) is simply as follows:

 Customer 1 tries Poisson() dishes.
 Subsequently, customer n + 1:

 tries dish k with probability mk
 tries Poisson( (1+c)(n+c+)

(n+1+c)(c+)) new dishes.

n+c , for each dish that has previously been tried;

where mk is the number of previous customers who tried dish k. The dishes and the customers
correspond to the columns and the rows of the binary matrix respectively, with an entry of the matrix
being one if the corresponding customer tried the dish (and zero otherwise). The mass parameter 
controls the total number of dishes tried by the customers, the concentration parameter c controls
the number of customers that will try each dish, and the stability exponent  controls the power-law
behavior of the process. When  = 0 the process does not exhibit power-law behavior and reduces
to the usual two-parameter IBP [2].
Many naturally occurring phenomena exhibit power-law behavior, and it has been argued that using
models that can capture this behavior can improve learning [8]. Recent examples where this has led
to signicant improvements include unsupervised morphology learning [8], language modeling [9]

1

and image segmentation [10]. These examples are all based on the Pitman-Yor process [11, 12, 13],
a generalization of the Dirichlet process [14] with power-law properties. Our generalization of the
IBP extends the ability to model power-law behavior to featural models, and we expect it to lead to
a wealth of novel applications not previously well handled by the IBP.
The approach we take in this paper is to rst dene the underlying de Finetti measure, then to derive
the conditional distributions of Bernoulli process observations with the de Finetti measure integrated
out. This automatically ensures that the resulting power-law IBP is innitely exchangeable. We call
the de Finetti measure of the power-law IBP the stable-beta process. It is a novel generalization of
the beta process [15] (which is the de Finetti measure of the normal two-parameter IBP [16]) with
characteristics reminiscent of the stable process [17, 11] (in turn related to the Pitman-Yor process).
We will see that the stable-beta process has a number of properties similar to the Pitman-Yor process.
In the following section we rst give a brief description of completely random measures, a class of
random measures which includes the stable-beta and the beta processes. In Section 3 we introduce
the stable-beta process, a three parameter generalization of the beta process and derive the power-
law IBP based on the stable-beta process. Based on the proposed model, in Section 4 we construct
a model of word occurrences in a document corpus. We conclude with a discussion in Section 5.

2 Completely Random Measures

In this section we give a brief description of completely random measures [18]. Let  be a measure
space with  its -algebra. A random variable whose values are measures on (, ) is referred
to as a random measure. A completely random measure (CRM)  over (, ) is a random mea-
sure such that (A)(B) for all disjoint measurable subsets A, B  . That is, the (random)
masses assigned to disjoint subsets are independent. An important implication of this property is
that the whole distribution over  is determined (with usually satised technical assumptions) once
the distributions of (A) are given for all A  .
CRMs can always be decomposed into a sum of three independent parts: a (non-random) measure,
an atomic measure with xed atoms but random masses, and an atomic measure with random atoms
and masses. CRMs in this paper will only contain the second and third components. In this case we
can write  in the form,

N(cid:88)

k=1

M(cid:88)

l=1

 =

ukk +

vll ,

(1)

where uk, vl > 0 are the random masses, k   are the xed atoms, l   are the random atoms,
and N, M  N{}. To describe  fully it is sufcient to specify N and {k}, and to describe the
joint distribution over the random variables {uk},{vl},{l} and M. Each uk has to be independent
from everything else and has some distribution Fk. The random atoms and their weights {vl, l}
are jointly drawn from a 2D Poisson process over (0,]   with some nonatomic rate measure
 called the Levy measure. The rate measure  has to satisfy a number of technical properties; see
(0,] (du  d) = M <  then the number of random atoms M in 
is Poisson distributed with mean M, otherwise there are an innite number of random atoms. If 
is described by  and {k, Fk}N

[18, 19] for details. If(cid:82)

k=1 as above, we write,

(cid:82)



  CRM(,{k, Fk}N

k=1).

(2)

3 The Stable-beta Process

In this section we introduce a novel CRM called the stable-beta process (SBP). It has no xed atoms
while its Levy measure is dened over (0, 1)  :

(1 + c)

0(du  d) = 

(3)
where the parameters are: a mass parameter  > 0, a concentration parameter c > , a stability
exponent 0   < 1, and a smooth base distribution H. The mass parameter controls the overall
mass of the process and the base distribution gives the distribution over the random atom locations.

(1  )(c + ) u1(1  u)c+1duH(d)

2

The mean of the SBP can be shown to be E[(A)] = H(A) for each A  , while var((A)) =
 1
1+c H(A). Thus the concentration parameter and the stability exponent both affect the variability
of the SBP around its mean. The stability exponent also governs the power-law behavior of the SBP.
When  = 0 the SBP does not have power-law behavior and reduces to a normal two-parameter beta
process [15, 16]. When c = 1   the stable-beta process describes the random atoms with masses
< 1 in a stable process [17, 11]. The SBP is so named as it can be seen as a generalization of both
the stable and the beta processes. Both the concentration parameter and the stability exponent can
be generalized to functions over  though we will not deal with this generalization here.

3.1 Posterior Stable-beta Process

Consider the following hierarchical model:
  CRM(0,{}),
Zi|  BernoulliP()

iid, for i = 1, . . . , n.

(4)
The random measure  is a SBP with no xed atoms and with Levy measure (3), while Zi 
BernoulliP() is a Bernoulli process with mean  [16]. This is also a CRM: in a small neighborhood
d around    it has a probability (d) of having a unit mass atom in d; otherwise it does not
have an atom in d. If  has an atom at  the probability of Zi having an atom at  as well is ({}).
If  has a smooth component, say 0, Zi will have random atoms drawn from a Poisson process
with rate measure 0. In typical applications to featural models the atoms in Zi give the features
associated with data item i, while the weights of the atoms in  give the prior probabilities of the
corresponding features occurring in a data item.
We are interested in both the posterior of  given Z1, . . . , Zn, as well as the conditional distribu-
tion of Zn+1|Z1, . . . , Zn with  marginalized out. Let 
K be the K unique atoms among
Z1, . . . , Zn with atom 
k occurring mk times. Theorem 3.3 of [20] shows that the posterior of 
given Z1, . . . , Zn is still a CRM, but now including xed atoms given by 
K. Its updated
Levy measure and the distribution of the mass at each xed atom 
k, Fnk}K

|Z1, . . . , Zn  CRM(n,{

k are,
k=1),

1, . . . , 

1, . . . , 

(5)

(6a)

(6b)

where

n(du  d) =

Fnk(du) =

(1 + c)

(1  )(c + ) u1(1  u)n+c+1duH(d),
(mk  )(n  mk + c + ) umk1(1  u)nmk+c+1du.

(n + c)

Intuitively, the posterior is obtained as follows. Firstly, the posterior of  must be a CRM since
both the prior of  and the likelihood of each Zi| factorize over disjoint subsets of . Secondly,
 must have xed atoms at each 
k since otherwise the probability that there will be atoms among
Z1, . . . , Zn at precisely 
k is zero. The posterior mass at 
k is obtained by multiplying a Bernoulli
likelihood umk(1  u)nmk (since there are mk occurrences of the atom 
k among Z1, . . . , Zn)
to the prior 0(dud
k) in (3) and normalizing, giving us (6b). Finally, outside of these K atoms
there are no other atoms among Z1, . . . , Zn. We can think of this as n observations of 0 among n
iid Bernoulli variables, so a likelihood of (1  u)n is multiplied into 0 (without normalization),
giving the updated Levy measure in (6a).
Let us inspect the distributions (6) of the xed and random atoms in the posterior  in turn. The
k has a distribution Fnk which is simply a beta distribution with parameters (mk 
random mass at 
, n  mk + c + ). This differs from the usual beta process in the subtraction of  from mk and
addition of  to n  mk + c. This is reminiscent of the Pitman-Yor generalization to the Dirichlet
process [11, 12, 13], where a discount parameter is subtracted from the number of customers seated
around each table, and added to the chance of sitting at a new table. On the other hand, the Levy
measure of the random atoms of  is still a Levy measure corresponding to an SBP with updated
parameters

(1 + c)(n + c + )
(n + 1 + c)(c + ) ,

(cid:48)  
c(cid:48)  c + n,

(cid:48)  
H(cid:48)  H.

(7)

3

Note that the update depends only on n, not on Z1, . . . , Zn. In summary, the posterior of  is simply
an independent sum of an SBP with updated parameters and of xed atoms with beta distributed
masses. Observe that the posterior  is not itself a SBP. In other words, the SBP is not conjugate
to Bernoulli process observations. This is different from the beta process and again reminiscent
of Pitman-Yor processes, where the posterior is also a sum of a Pitman-Yor process with updated
parameters and xed atoms with random masses, but not a Pitman-Yor process [11]. Fortunately,
the non-conjugacy of the SBP does not preclude efcient inference. In the next subsections we de-
scribe an Indian buffet process and a stick-breaking construction corresponding to the SBP. Efcient
inference techniques based on both representations for the beta process can be straightforwardly
generalized to the SBP [1, 16, 21].

3.2 The Stable-beta Indian Buffet Process

We can derive an Indian buffet process (IBP) corresponding to the SBP by deriving, for each n,
the distribution of Zn+1 conditioned on Z1, . . . , Zn, with  marginalized out. This derivation is
straightforward and follows closely that for the beta process [16]. For each of the atoms 
k the
posterior of (

k) given Z1, . . . , Zn is beta distributed with mean mk
p(Zn+1(

k) = 1|Z1, . . . , Zn) = E[(

k)|Z1, . . . , Zn] = mk  

n+c . Thus

(8)

n + c

Metaphorically speaking, customer n + 1 tries dish k with probability mk
atoms. Let   \{

K}. In a small neighborhood d around , we have:

1, . . . , 

n+c . Now for the random

(cid:90) 1

0

un(du  d)

(cid:90) 1

p(Zn+1(d) = 1|Z1, . . . , Zn) = E[(d)|Z1, . . . , Zn] =
(1  )(c + ) u1(1  u)n+c+1duH(d)
(1 + c)

(cid:90) 1

(1 + c)

u

u(1  u)n+c+1du

0

=

=

(1  )(c + ) H(d)
(1 + c)(n + c + )
(n + 1 + c)(c + ) H(d)

0

(cid:18)

n(cid:88)

(cid:19) K(cid:89)

=

(9)
K}
Since Zn+1 is completely random and H is smooth, the above shows that on \{
1, . . . , 
Zn+1 is simply a Poisson process with rate measure  (1+c)(n+c+)
(n+1+c)(c+) H. In particular, it will have
Poisson( (1+c)(n+c+)
(n+1+c)(c+)) new atoms, each independently and identically distributed according to
H. In the IBP metaphor, this corresponds to customer n+1 trying new dishes, with each dish associ-
ated with a new draw from H. The resulting Indian buffet process is as described in the introduction.
It is automatically innitely exchangeable since it was derived from the conditional distributions of
the hierarchical model (4).
Multiplying the conditional probabilities of each Zn given previous ones together, we get the joint
probability of Z1, . . . , Zn with  marginalized out:

p(Z1, . . . , Zn) = exp



(1+c)(i1+c+)

(i+c)(c+)

(mk)(nmk+c+)(1+c)

(1)(c+)(n+c)

h(

k), (10)

i=1

k=1

where there are K atoms (dishes) 
K among Z1, . . . , Zn with atom k appearing mk times,
and h is the density of H. (10) is to be contrasted with (4) in [1]. The Kh! terms in [1] are absent
as we have to distinguish among these Kh dishes in assigning each of them a distinct atom (this
also contributes the h(
k) terms). The fact that (10) is invariant to permuting the ordering among
Z1, . . . , Zn also indicates the innite exchangeability of the stable-beta IBP.

1, . . . , 

3.3 Stick-breaking constructions

In this section we describe stick-breaking constructions for the SBP generalizing those for the beta
process. The rst is based on the size-biased ordering of atoms induced by the IBP [16], while

4

the second is based on the inverse Levy measure method [22], and produces a sequence of random
atoms of strictly decreasing masses [21].
The size-biased construction is straightforward: we use the IBP to generate the atoms (dishes) in the
SBP; each time a dish is newly generated the atom is drawn from H and its mass from Fnk. This
leads to the following procedure:

for n = 1, 2, . . .:
for k = 1, . . . , Jn:

Jn  Poisson( (1+c)(n1+c+)
vnk  Beta(1  , n  1 + c + ),

(n+c)(c+)

),

nk  H,

(11)

(cid:88)

Jn(cid:88)

n=1

k=1

 =

vnknk .

(1+c)

The inverse Levy measure is a general method of generating from a Poisson process with non-
uniform rate measure.
It essentially transforms the Poisson process into one with uniform rate,
generates a sample, and transforms the sample back. This method is more involved for the
SBP because the inverse transform has no analytically tractable form. The Levy measure 0 of
the SBP factorizes into a product 0(du d) = L(du)H(d) of a -nite measure L(du) =
(1)(c+) u1(1u)c+1du over (0, 1) and a probability measure H over . This implies

that we can generate a sample {vl, l}
l=1 of the random atoms of  and their masses by rst sam-
l=1  PoissonP(L) from a Poisson process on (0, 1) with rate measure L, and
pling the masses {vl}
associating each vl with an iid draw l  H [19]. Now consider the mapping T : (0, 1)  (0,)
(cid:90) 1
given by

(cid:90) 1

T (u) =

L(du) =

u

u



(1 + c)

(1  )(c + ) u1(1  u)c+1du.

(12)

l=1  PoissonP(L) if and only if {T (vl)}

T is bijective and monotonically decreasing. The Mapping Theorem for Poisson processes [19]
shows that {vl}
l=1  PoissonP(L) where L is
l=1  PoissonP(L) can be easily drawn by letting
Lebesgue measure on (0,). A sample {tl}
i=1 ei for all l. Transforming back with vl = T 1(tl),
l=1  PoissonP(L). As t1, t2, . . . is an increasing sequence and T is decreasing,
we have {vl}
v1, v2, . . . is a decreasing sequence of masses. Deriving the density of vl given vl1, we get:

el  Exponential(1) and setting tl = (cid:80)l
p(vl|vl1) =(cid:12)(cid:12) dtl

(cid:12)(cid:12)p(tl|tl1) = 

(1vl)c+1 exp

(1)(c+) v1

(cid:90) vl1

(cid:110)

. (13)

L(du)

(cid:111)

(1+c)

l

dvl

vl

In general these densities do not simplify and we have to resort to solving for T 1(tl) numerically.
There are two cases for which they do simplify. For c = 1,  = 0, the density function reduces to
p(vl|vl1) = v1
l1, leading to the stick-breaking construction of the single parameter IBP
[21]. In the stable process case when c = 1   and  (cid:54)= 0, the density of vl simplies to:

/v

l

p(vl | vl1) =  (2)

(1)(1) v1
exp

= (1  )v1

l

l

Doing a change of values to yl = v

l

, we get:
p(yl|yl1) =  1

 exp

(cid:111)
 (2)
(1)(1) u1du

 exp

vl

(cid:110) (cid:82) vl1
(cid:110)  (1)
(cid:110)   1

l  v
(v
l1)

(cid:111)
(cid:111)
 (yl  yl1)



.

.

(14)

(15)

That is, each yl is exponentially distributed with rate  1
and offset by yl1. For general values
of the parameters we do not have an analytic stick breaking form. However note that the weights
generated using this method are still going to be strictly decreasing.



3.4 Power-law Properties

The SBP has a number of appealing power-law properties. In this section we shall assume  > 0
since the case  = 0 reduces the SBP to the usual beta process with less interesting power-law
properties. Derivations are given in the appendix.

5

Figure 1: Power-law properties of the stable-beta Indian buffet process.

Firstly, the total number of dishes tried by n customers is O(n). The left panel of Figure 1 shows
this for varying . Secondly, the number of customers trying each dish follows a Zipfs law [23].
This is shown in the right panel of Figure 1, which plots the number of dishes Km versus the
number of customers m trying each dish (that is, Km is the number of dishes k for which mk = m).
Asymptotically we can show that the proportion of dishes tried by m customers is O(m1). Note
that these power-laws are similar to those observed for Pitman-Yor processes. One aspect of the
SBP which is not power-law is the number of dishes each customer tries. This is simply Poisson()
distributed. It seems difcult obtain power-law behavior in this aspect within a CRM framework,
because of the fundamental role played by the Poisson process.

4 Word Occurrence Models with Stable-beta Processes

In this section we use the SBP as a model for word occurrences in document corpora. Let n be
the number of documents in a corpus. Let Zi({}) = 1 if word type  occurs in document i and
0 otherwise, and let ({}) be the occurrence probability of word type  among the documents
in the corpus. We use the hierarchical model (4) with a SBP prior1 on  and with each document
modeled as a conditionally independent Bernoulli process draw. The joint distribution over the word
occurrences Z1, . . . , Zn, with  integrated out, is given by the IBP joint probability (10).
We applied the word occurrence model to the 20newsgroups dataset. Following [16], we modeled
the training documents in each of the 20 newsgroups as a separate corpus with a separate SBP. We
use the popularity of each word type across all 20 newsgroups as the base distribution2: for each
word type  let n be the number of documents containing  and let H({})  n.
In the rst experiment we compared the SBP to the beta process by tting the parameters , c and
 of both models to each newsgroup by maximum likelihood (in beta process case  is xed at
0) . We expect the SBP to perform better as it is better able to capture the power-law statistics of
the document corpora (see Figure 2). The ML values of the parameters across classes did not vary
much, taking values  = 142.6  40.0, c = 4.1  0.9 and  = 0.47  0.1. In comparison, the
parameters values obtained by the beta process are  = 147.3  41.4 and c = 25.9  8.4. Note that
the estimated values for c are signicantly larger than for the SBP to allow the beta process to model
the fact that many words occur in a small number of documents (a consequence of the power-law

1Words are discrete objects. To get a smooth base distribution we imagine appending each word type with

a U [0, 1] variate. This does not affect the modelling that follows.

2The appropriate technique, as proposed by [16], would be to use a hierarchical SBP to tie the word occur-
rence probabilities across the newsgroups. However due to difculties dealing with atomic base distributions
we cannot dene a hierarchical SBP easily (see discussion).

6

100102104106100101102103104105number of customersmean number of dishes tried!=1, c=1  "=0.8"=0.5"=0.2"=0100102104100101102103104number of customers trying each dishnumber of dishes!=1, c=1, "=0.5Figure 2: Power-law properties of the 20newsgroups dataset. The faint dashed lines are the distribu-
tions of words in the documents in each class, the solid curve is the mean of these lines. The dashed
lines are the means of the word distributions generated by the ML parameters for the beta process
(pink) and the SBP (green).

Table 1: Classication performance of SBP and beta process (BP). The jth column (denoted 1:j)
shows the cumulative rank j classication accuracy of the test documents. The three numbers after
the models are the percentages of training, validation and test sets respectively.
1:4

assigned to classes:

1:5

1

1:2

1:3

BP - 20/20/60
SBP - 20/20/60
BP - 60/20/20
SBP - 60/20/20

78.7(0.5)
79.9(0.5)
85.5(0.6)
85.5(0.4)

87.4(0.2)
87.6(0.1)
91.6(0.3)
91.9(0.4)

91.3(0.2)
91.5(0.2)
94.2(0.3)
94.4(0.2)

95.1(0.2)
93.7(0.2)
95.6(0.4)
95.6(0.3)

96.2(0.2)
95.1(0.2)
96.6(0.3)
96.6(0.3)

statistics of word occurrences; see Figure 2). We also plotted the characteristics of data simulated
from the models using the estimated ML parameters. The SBP has a much better t than the beta
process to the power-law properties of the corpora.
In the second experiment we tested the two models on categorizing test documents into one of the
20 newsgroups. Since this is a discriminative task, we optimized the parameters in both models to
maximize the cumulative ranked classication performance. The rank j classication performance
is dened to be the percentage of documents where the true label is among the top j predicted classes
(as determined by the IBP conditional probabilities of the documents under each of the 20 newsgroup
classes). As the cost function is not differentiable, we did a grid search over the parameter space,
using 20 values of , c and  each, and found the parameters maximizing the objective function on
a validation set separate from the test set. To see the effect of sample size on model performance we
tried splitting the documents in each newsgroup into 20% training, 20% validation and 60% test sets,
and into 60% training, 20% validation and 20% test sets. We repeated the experiment ve times with
different random splits of the dataset. The ranked classication rates are shown in Table 1. Figure 3
shows that the SBP model has generally higher classication performances than the beta process.

5 Discussion

We have introduced a novel stochastic process called the stable-beta process. The stable-beta process
is a generalization of the beta process, and can be used in nonparametric Bayesian featural models
with an unbounded number of features. As opposed to the beta process, the stable-beta process has
a number of appealing power-law properties. We developed both an Indian buffet process and a
stick-breaking construction for the stable-beta process and applied it to modeling word occurrences
in document corpora. We expect the stable-beta process to nd uses modeling a range of natural
phenomena with power-law properties.

7

1002003004005002000400060008000100001200014000number of documentscumulative number of words  BPSBPDATA100101102100101102103number of documents per wordnumber of words  BPSBPDATAFigure 3: Differences between the classication rates of the SBP and the beta process. The perfor-
mance of the SBP was consistently higher than that of the beta process for each of the ve runs.

We derived the stable-beta process as a completely random measure with Levy measure (3).
It
would be interesting and illuminating to try to derive it as an innite limit of nite models, however
we were not able to do so in our initial attempts. A related question is whether there is a natural
denition of the stable-beta process for non-smooth base distributions. Until this is resolved in the
positive, we are not able to dene hierarchical stable-beta processes generalizing the hierarchical
beta processes [16].
Another avenue of research we are currently pursuing is in deriving better stick-breaking construc-
tions for the stable-beta process. The current construction requires inverting the integral (12), which
is expensive as it requires an iterative method which evaluates the integral numerically within each
iteration.

Acknowledgement

We thank the Gatsby Charitable Foundation for funding, Romain Thibaux, Peter Latham and Tom
Grifths for interesting discussions, and the anonymous reviewers for help and feedback.

A Derivation of Power-law Properties
We will make large n and K assumptions here, and make use of Stirlings approximation (n+1) 

2n(n/e)n, which is accurate in the larger n regime. The expected number of dishes is,

(n+1+c)(c+)  O
 (1+c)(n+c+)

i=1

i=1

2(i+c+1)((i+c+1)/e)i+c+1

2(i+c)((i+c)/e)i+c

= O

K!Qn

= O(n). (16)

e+1(1 + 1

e+1e1i1

We are interested in the joint distribution of the statistics (K1, . . . , Kn), where Km is the number
of dishes tried by exactly m customers and where there are a total of n customers in the restaurant.
As there are
(K1, . . . , Kn), we have (ignoring constant terms and collecting terms in (10) with mk = m),

i+c )i+c(i + c +   1)1
(cid:0)
(cid:81)n
K!Qn
m=1 Km as well, we see that (K1, . . . , Kn) is multinomial with the prob-
ability of a dish having m customers being proportional to the term in large parentheses. For large
m (and even larger n), this probability simplies to,

(cid:1)Km congurations of the IBP with the same statistics
(cid:16)

p(K1, . . . , Kn|n) 

Conditioning on K =(cid:80)n

(m)(nm+c+)(1+c)

(1)(c+)(n+c)

(cid:17)Km

m=1 Km!

m=1

m=1 Km!

m=1

(cid:81)n

.

(17)

n!

m!(nm)!

n!

m!(nm)!

(cid:19)

= O(cid:0)m1(cid:1) .

(18)

(cid:18)

O( (m)

(m+1) ) = O

n(cid:88)

E[K] =

(cid:32) n(cid:88)

=O

i=1

(cid:32) n(cid:88)





(cid:33)

(cid:32) n(cid:88)

i=1

(cid:33)
(cid:33)

2(m1)((m1)/e)m1



2m(m/e)m

8

